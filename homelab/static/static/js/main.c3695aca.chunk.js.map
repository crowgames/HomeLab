{"version":3,"sources":["utils.js","Navigation.js","Overview.js","device/DeviceHistory.js","InternetUsage.js","EarthNetworkVisualization.js","GlobalLocations.js","Devices.js","device/DeviceOverview.js","device/InternalExternal.js","device/IngoingOutgoing.js","device/DeviceActivity.js","device/DeviceCommunicationPartners.js","device/DeviceInfo.js","device/DeviceView.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["ip4ToInt","ip","split","reduce","int","oct","parseInt","isIp4InCidrs","cidrs","some","cidr","_cidr$split","_cidr$split2","Object","slicedToArray","range","_cidr$split2$","bits","mask","Math","pow","isIp4InCidr","openExternally","url","window","nw","Window","open","focus","width","height","new_win","getDeviceName","device","name","length","Navigation","target","this","props","navigate","_this","classes","devices","map","d","react_default","a","createElement","List_default","component","disablePadding","ListItem_default","button","onClick","handleClick","className","nested","ListItemIcon_default","CheckCircle_default","ListItemText_default","inset","primary","Home_default","DataUsage_default","Map_default","Devices_default","Collapse_default","in","timeout","unmountOnExit","React","Component","withStyles","theme","root","display","paddingLeft","spacing","unit","cards","Overview","key","appBarSpacer","Typography_default","variant","gutterBottom","Paper_default","classNames","layout","cardGrid","Grid_default","container","card","item","sm","md","lg","Card_default","CardMedia_default","cardMedia","image","title","CardContent_default","cardContent","CardActions_default","Button_default","size","color","objectSpread","mixins","gutters","paddingTop","paddingBottom","toolbar","heroContent","maxWidth","margin","padding","concat","heroButtons","marginTop","flexDirection","flexGrow","DeviceHistory","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","history","Symbol","iterator","next","done","time","value","point","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","external","sortable","con","connections","push","_i","_sortable","entry","bsnd","brcv","err","return","COLORS","areas","i","es6","type","dataKey","stackId","stroke","fill","top","right","left","bottom","strokeDasharray","domain","tickFormatter","unixTime","moment","format","label","angle","position","PI","InternetUsage","state","activeIndex","onPieEnter","bind","assertThisInitialized","index","setState","_this2","style","minHeight","CardHeader_default","ResponsiveContainer","PieChart","onMouseEnter","Pie","cx","cy","labelLine","innerRadius","outerRadius","activeShape","self","RADIAN","midAngle","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","r","parseFloat","getNumberOfScans","toFixed","renderActiveShape","Cell","verticalAlign","align","device_DeviceHistory","EarthDeviceVisualization","total_packages","getTotalPackages","refresh","nextProps","initialize","prevProps","prevState","d3","on","mousemove","mouseup","proj","orthographic","translate","clipAngle","scale","sky","path","projection","pointRadius","swoosh","line","interpolate","tension","links","arcLines","svg","append","attr","mousedown","queue","defer","await","error","world","ready","_this3","location","selectAll","remove","ocean_fill","globe_shading","drop_shadow","land","topojson","objects","datum","getPlaces","enter","getArcLines","min","max","properties","count","getLinks","threats","flying_arc","cnt","_loop","keys","snd","rcv","b","_this4","local_loc","lat","lon","test","geometry","coordinates","all_remote","_loop2","remote","loc","filter","el","toConsumableArray","_this5","src","all_lines","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop3","lines","mac","_iterator3","_this6","all_links","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop4","source","_iterator4","m0","pageX","pageY","o0","rotate","preventDefault","m1","o1","start","end","centerPos","invert","arc","greatArc","start_dist","distance","end_dist","linear","fade","pts","mid","location_along_arc","interpolator","_this7","find","de","fade_at_edge","id","wdiht","GlobalLocations","selectedDevices","toggleDevice","m","deviceCheckboxes","FormControlLabel_default","control","Checkbox_default","checked","onChange","textAlign","EarthNetworkVisualization","FormControl_default","formControl","FormLabel_default","FormGroup_default","Devices","BotNetStatus","report","cc_threats","bn_threats","tt","t","lists","e","indexOf","bt","JSON","parse","stringify","ip_lists","substring","lastIndexOf","href","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","SuspiciousTrafficStatus","topic","cm","addition","cm_threats","getAllThreatsConcerning","addThreatReport","invalid_ips","malware","ransomware","spam","SuspiciousActivityStatus","DeviceOverview","DeviceOverview_BotNetStatus","DeviceOverview_SuspiciousTrafficStatus","DeviceOverview_SuspiciousActivityStatus","InternalExternal","internal","IngoingOutgoing","sending","receiving","DeviceActivity","device_InternalExternal","device_IngoingOutgoing","DeviceCommunicationPartners","sort","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","domainStuff","domains","scope","city","cc","DeviceInfo","vendor","osmatch","os","tcp","port","product","ports","getPorts","getVendor","getOSMatch","DeviceView","handleChange","event","content","device_DeviceOverview","device_DeviceActivity","device_DeviceCommunicationPartners","device_DeviceInfo","square","AppBar_default","Tabs_default","indicatorColor","textColor","Tab_default","Dashboard","navigation","timeSelect","historySelection","handleDrawerOpen","handleDrawerClose","filteredHistory","memoize","timeSelection","maxTime","acc","scan","mergedScan","fhist","base","pop","sdev","bdev","scon_index","scon","bcon","random","handleTimeSelect","mScan","mainContent","src_Overview","src_InternetUsage","src_GlobalLocations","src_Devices","dev","device_DeviceView","CssBaseline_default","appBar","Toolbar_default","disableGutters","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","noWrap","ToggleButtonGroup_default","toggleGroup","exclusive","ToggleButton_default","Badge_default","badgeContent","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","src_Navigation","paddingRight","alignItems","justifyContent","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","marginRight","whiteSpace","defineProperty","overflowX","breakpoints","up","overflow","chartContainer","tableContainer","h5","marginBottom","createMuiTheme","palette","main","secondary","App","initWS","route","scan_text","scan_progress","disclaimer","once_open","ws","WebSocket","hostname","onopen","console","log","onmessage","msg","text","progress","onerror","ev","alert","MuiThemeProvider_default","src_Dashboard","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"stBAAMA,GAAW,SAAAC,GAAE,OACfA,EAAGC,MAAM,KAAKC,OAAO,SAACC,EAAKC,GAAN,OAAeD,GAAO,GAAKE,SAASD,EAAK,KAAK,KAAO,GAQxEE,GAAe,SAACN,EAAIO,GAAL,OAAeA,EAAMC,KANtB,SAAAR,GAAE,OAAI,SAAAS,GAAQ,IAAAC,EACHD,EAAKR,MAAM,KADRU,EAAAC,OAAAC,GAAA,EAAAD,CAAAF,EAAA,GACvBI,EADuBH,EAAA,GAAAI,EAAAJ,EAAA,GAChBK,OADgB,IAAAD,EACT,GADSA,EAExBE,IAASC,KAAAC,IAAA,EAAM,GAAKH,GAAQ,GAClC,OAAQjB,GAASC,GAAMiB,MAAWlB,GAASe,GAASG,IAGTG,CAAYpB,KA2D3D,SAASqB,GAAeC,GAChBC,OAAOC,GACPD,OAAOC,GAAGC,OAAOC,KAAKJ,EAAK,CAACK,OAAO,EAAMC,MAAO,IAAKC,OAAQ,KAAM,SAAUC,MAInEP,OAAOG,KAAKJ,EAAK,UACvBK,QAIZ,SAASI,GAAcC,GACnB,OAAGA,EAAOC,MAAQD,EAAOC,KAAKC,OAAS,EAC5BF,EAAOC,KAEPD,EAAOhC,GCnEtB,IASMmC,uLAEUC,GACRC,KAAKC,MAAMC,SAASH,oCAGf,IAAAI,EAAAH,KACEI,EAAWJ,KAAKC,MAAhBG,QAEHC,EAAUL,KAAKC,MAAMI,QAAQC,IAAI,SAAAC,GAAC,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,UAAU,MAAMC,gBAAc,GAC1EL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAAEC,QAAS,kBAAMb,EAAKc,YAAYV,EAAE5C,KAAKuD,UAAWd,EAAQe,QACxEX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACW,GAAAZ,EAAD,OAEJD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAcc,OAAK,EAACC,QAAS9B,GAAca,SAInD,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACID,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,QAAS,kBAAMb,EAAKc,YAAY,cAC7CT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,OAEJD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAce,QAAQ,cAE1BhB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,QAAS,kBAAMb,EAAKc,YAAY,oBAC7CT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,OAEJD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAce,QAAQ,oBAE1BhB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,QAAS,kBAAMb,EAAKc,YAAY,eAC7CT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACiB,GAAAlB,EAAD,OAEJD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAce,QAAQ,eAE1BhB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAAEC,QAAS,kBAAMb,EAAKc,YAAY,aAC9CT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,OAEJD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAce,QAAQ,aAE1BhB,EAAAC,EAAAC,cAACmB,GAAApB,EAAD,CAAUqB,IAAI,EAAMC,QAAQ,OAAOC,eAAa,GAC3C3B,YA9CA4B,IAAMC,WA0DhBC,wBAnEA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbnB,OAAQ,CACJoB,YAAkC,EAArBH,EAAMI,QAAQC,QA8DpBN,CAAmBrC,mJCrC5B4C,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAE5CC,oLAIO,IACEvC,EAAWJ,KAAKC,MAAhBG,QAIP,MAAO,CACHI,EAAAC,EAAAC,cAAA,OAAKkC,IAAK,SAAU1B,UAAWd,EAAQyC,eACvCrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYmC,IAAK,QAASG,QAAQ,KAAKC,cAAY,EAACpC,UAAU,MAA9D,YAGAJ,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAQS,UAAWd,EAAQiC,MAA3B,0BAGA7B,EAAAC,EAAAC,cAAA,OAAKQ,UAAWgC,IAAW9C,EAAQ+C,OAAQ/C,EAAQgD,WAE/C5C,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM6C,WAAS,EAACd,QAAS,IACpBE,GAAMpC,IAAI,SAAAiD,GAAI,OACX/C,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAKW,EAAME,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACrCnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CACIS,UAAWd,EAAQ0D,UACnBC,MAAM,8sBACNC,MAAM,gBAEVxD,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAC5B1D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYuC,cAAY,EAACD,QAAQ,KAAKnC,UAAU,MAAhD,WAGAJ,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,iFAIJD,EAAAC,EAAAC,cAACyD,GAAA1D,EAAD,KACID,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,CAAQ4D,KAAK,QAAQC,MAAM,WAA3B,uBArCbrC,IAAMC,WAsDdC,wBAzFA,SAAAC,GAAK,MAAK,CACrBC,KAAK9D,OAAAgG,EAAA,EAAAhG,CAAA,GACE6D,EAAMoC,OAAOC,UADhB,CAEAC,WAAiC,EAArBtC,EAAMI,QAAQC,KAC1BkC,cAAoC,EAArBvC,EAAMI,QAAQC,OAEjCI,aAAcT,EAAMoC,OAAOI,QAAQC,YAAa,CAC5CC,SAAU,IACVC,OAAQ,SACRC,QAAO,GAAAC,OAA0B,EAArB7C,EAAMI,QAAQC,KAAnB,SAAAwC,OAAwD,EAArB7C,EAAMI,QAAQC,KAAjD,OAEXyC,YAAa,CACTC,UAAgC,EAArB/C,EAAMI,QAAQC,MAE7BU,OAAQ,CACJ5D,MAAO,QAEX6D,SAAU,CACN4B,QAAO,GAAAC,OAA0B,EAArB7C,EAAMI,QAAQC,KAAnB,SAEXc,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KA4DHlD,CAAmBQ,4FC/BlB2C,eAxDZ,SAAAA,EAAYrF,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAsF,GAAA/G,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA+G,GAAAI,KAAA1F,KACVC,0EAKN,IAAM0F,EAAO,GADRC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIL,QAAAC,EAAAC,EAAgBjG,KAAKC,MAAMiG,QAA3BC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAmC,KAA3BW,EAA2BP,EAAAQ,MAC3BC,EAAQ,CAAC7G,KAAM2G,EAAKA,MADOG,GAAA,EAAAC,GAAA,EAAAC,OAAAb,EAAA,IAE/B,QAAAc,EAAAC,EAAkBP,EAAKlG,QAAvB8F,OAAAC,cAAAM,GAAAG,EAAAC,EAAAT,QAAAC,MAAAI,GAAA,EAAgC,KAAxB/G,EAAwBkH,EAAAL,MACxBO,EAAW,EAEXC,EAAW,GACf,IAAK,IAAIC,KAAOtH,EAAOuH,YACnBF,EAASG,KAAK,CAACF,EAAKtH,EAAOuH,YAAYD,KAI3C,IADA,IACAG,EAAA,EAAAC,EAAkBL,EAAlBI,EAAAC,EAAAxH,OAAAuH,IAA4B,CAAvB,IAAIE,EAAKD,EAAAD,GACJpH,KAAKC,MAAM7B,MAAQH,GAAaqJ,EAAM,GAAI,CAACtH,KAAKC,MAAM7B,KAAM,qBAAsB,mBACpF2I,GAAYO,EAAM,GAAGC,KAAOD,EAAM,GAAGE,MAI7Cf,EAAM9G,EAAOhC,IAAMoJ,EAAS,KAAK,IAjBN,MAAAU,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAmB/BjB,EAAKwB,KAAKV,IAvBT,MAAAgB,GAAA5B,GAAA,EAAAC,EAAA2B,EAAA,YAAA7B,GAAA,MAAAK,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAA7B,EAAA,MAAAC,GA0BL,IAAM6B,EAAS,CAAC,UAAW,UAAW,UAAW,WAE7CC,EAAQ5H,KAAKC,MAAMI,QAAQC,IAAI,SAACC,EAAEsH,GAAH,OAASrH,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAMC,KAAK,WAAWC,QAASzH,EAAE5C,GAAIsK,QAAQ,IAAIC,OAAQP,EAAOE,EAAEF,EAAO9H,QAASsI,KAAMR,EAAOE,EAAEF,EAAO9H,YAEpJ,OAAOW,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAqBvI,MAAM,OAAOC,OAAQ,KAC7CgB,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAWvI,MAAM,OAAOC,OAAO,OAAOmG,KAAMA,EAC9BZ,OAAQ,CAACqD,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAC5D/H,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAeU,gBAAgB,QAC/BhI,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAOE,QAAQ,OAAOS,OAAQ,CAAC,UAAW,WACnC7I,KAAO,OACP8I,cAAiB,SAACC,GAAD,OAAcC,KAAgB,IAATD,GAAeE,OAAO,qBAC5Dd,KAAO,WACdvH,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAOgB,MAAO,CAAEtC,MAAO,OAAQuC,OAAQ,GAAIC,SAAU,gBACpDpB,EACDpH,EAAAC,EAAAC,cAACoH,GAAA,EAAD,eA9CgB7F,IAAMC,WC0B5ByF,GAAS,CAAC,UAAW,UAAW,UAAW,WA+D3ChC,IA7DS9G,KAAKoK,GA6DP,IAEPC,eAEF,SAAAA,EAAYjJ,GAAO,IAAAE,EAAA,OAAA5B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAkJ,IACf/I,EAAA5B,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA2K,GAAAxD,KAAA1F,KAAMC,KAEDkJ,MAAQ,CAACC,YAAa,GAE3BjJ,EAAKkJ,WAAalJ,EAAKkJ,WAAWC,KAAhB/K,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA4B,KALHA,0EAQRwF,EAAM6D,GACbxJ,KAAKyJ,SAAS,CACVL,YAAaI,qCAIZ,IAAAE,EAAA1J,KACEI,EAAWJ,KAAKC,MAAhBG,QAEPuF,GAAK9F,OAAS,EAHT,IAAA+F,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAKL,QAAAC,EAAAC,EAAmBjG,KAAKC,MAAMI,QAA9B8F,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAuC,KAA9BjG,EAA8BqG,EAAAQ,MAC/BO,EAAW,EAEXC,EAAW,GACf,IAAK,IAAIC,KAAOtH,EAAOuH,YACnBF,EAASG,KAAK,CAACF,EAAKtH,EAAOuH,YAAYD,KAI3C,IADA,IACAG,EAAA,EAAAC,EAAkBL,EAAlBI,EAAAC,EAAAxH,OAAAuH,IAA4B,CAAvB,IAAIE,EAAKD,EAAAD,GACJpH,KAAKC,MAAM7B,MAAQH,GAAaqJ,EAAM,GAAI,CAACtH,KAAKC,MAAM7B,KAAM,qBAAsB,mBACpF2I,GAAYO,EAAM,GAAGC,KAAOD,EAAM,GAAGE,MAI7C7B,GAAKwB,KAAK,CAACvH,KAAMF,GAAcC,GAAS6G,MAAOO,KApB9C,MAAAU,GAAA5B,GAAA,EAAAC,EAAA2B,EAAA,YAAA7B,GAAA,MAAAK,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAA7B,EAAA,MAAAC,GAwBL,MAAO,CACHtF,EAAAC,EAAAC,cAAA,OAAKkC,IAAK,SAAU1B,UAAWd,EAAQyC,eACvCrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYmC,IAAK,QAASG,QAAQ,KAAKC,cAAY,EAACpC,UAAU,MAA9D,kBAGAJ,EAAAC,EAAAC,cAAA,OAAKQ,UAAWgC,IAAW9C,EAAQ+C,OAAQ/C,EAAQgD,WAE/C5C,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM6C,WAAS,EAACd,QAAS,IACrBhC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,QAAQa,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvCnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,KAAMoG,MAAO,CAACC,UAAY,UAC/CpJ,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAYuD,MAAM,oCAClBxD,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAE5B1D,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAqBvK,MAAM,OAAOC,OAAO,QACrCgB,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,CAAUC,aAAchK,KAAKqJ,YACzB7I,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CACItE,KAAMA,GACNuE,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAY,MAAMC,YAAY,MAC9BnC,KAAK,UACLH,QAAU,QACVuC,YAAa,SAACtK,GAAD,OAjH/B,SAACA,EAAOuK,GAC9B,IAAMC,EAAS5L,KAAKoK,GAAK,IAErBiB,EAEAjK,EAFAiK,GAAIC,EAEJlK,EAFIkK,GAAIO,EAERzK,EAFQyK,SAAUL,EAElBpK,EAFkBoK,YAAaC,EAE/BrK,EAF+BqK,YAAaK,EAE5C1K,EAF4C0K,WAAYC,EAExD3K,EAFwD2K,SACxDzC,EACAlI,EADAkI,KAAM0C,EACN5K,EADM4K,QAASC,EACf7K,EADe6K,QAAStE,EACxBvG,EADwBuG,MAEtBuE,EAAMlM,KAAKkM,KAAKN,EAASC,GACzBM,EAAMnM,KAAKmM,KAAKP,EAASC,GACzBO,EAAKf,GAAMI,EAAc,IAAMU,EAC/BE,EAAKf,GAAMG,EAAc,IAAMS,EAC/BI,EAAKjB,GAAMI,EAAc,IAAMU,EAC/BI,EAAKjB,GAAMG,EAAc,IAAMS,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MAExC,OACIxK,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAM8K,EAAGtB,EAAIuB,EAAGtB,EAAIuB,GAAI,EAAGH,WAAW,SAASpD,KAAMA,GAAO0C,EAAQjL,MACpEY,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CACIoC,GAAIA,EACJC,GAAIA,EACJE,YAAaA,EACbC,YAAaA,EACbK,WAAYA,EACZC,SAAUA,EACVzC,KAAMA,IAEV3H,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CACIoC,GAAIA,EACJC,GAAIA,EACJQ,WAAYA,EACZC,SAAUA,EACVP,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BnC,KAAMA,IAEV3H,EAAAC,EAAAC,cAAA,QAAMH,EAAC,IAAA0E,OAAMgG,EAAN,KAAAhG,OAAYiG,EAAZ,KAAAjG,OAAkBkG,EAAlB,KAAAlG,OAAwBmG,EAAxB,KAAAnG,OAA8BoG,EAA9B,KAAApG,OAAoCqG,GAAMpD,OAAQC,EAAMA,KAAK,SACpE3H,EAAAC,EAAAC,cAAA,UAAQwJ,GAAImB,EAAIlB,GAAImB,EAAIK,EAAG,EAAGxD,KAAMA,EAAMD,OAAO,SACjD1H,EAAAC,EAAAC,cAAA,QAAM8K,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GAASS,EAAGH,EAAIC,WAAYA,EACrDpD,KAAK,QAAQyD,WAAWpF,EAAQ,IAAOgE,EAAKqB,mBAAmB,IAAIC,QAAQ,GAAK,QACtFtL,EAAAC,EAAAC,cAAA,QAAM8K,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GAASS,EAAGH,EAAII,GAAI,GAAIH,WAAYA,EAAYpD,KAAK,QAApF,IAAAlD,QACoB,IAAV6F,GAAegB,QAAQ,GADjC,qBAwEsDC,CAAkB9L,EAAMyJ,IAC9CN,YAAapJ,KAAKmJ,MAAMC,YACxBY,aAAchK,KAAKqJ,YAGf1D,GAAKrF,IAAI,SAACgH,EAAOkC,GAAR,OAAkBhJ,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAM7D,KAAMR,GAAO6B,EAAQ7B,GAAO9H,aAGrEW,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQ3E,OAAO,WAAW8I,cAAc,SAASC,MAAM,eAM3E1L,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,YAAYa,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC3CnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAYuD,MAAM,oBAClBxD,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAE5B1D,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAqBvK,MAAM,OAAOC,OAAO,QACrCgB,EAAAC,EAAAC,cAACyL,GAAD,CAAe9L,QAASL,KAAKC,MAAMI,QAASjC,KAAM4B,KAAKC,MAAM7B,KAAO8H,QAASlG,KAAKC,MAAMiG,4DAWpH,OAAOlG,KAAKC,MAAMiG,QAAQrG,cA9FNoC,IAAMC,WAsGnBC,wBA9LA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbO,aAAcT,EAAMoC,OAAOI,QAC3BzB,OAAQ,CACJ5D,MAAO,QAEX6D,SAAU,CACN4B,QAAO,SAEXzB,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KA0KHlD,CAAmB+G,iCCvL5BkD,eACF,SAAAA,EAAYnM,GAAO,IAAAE,EAAA,OAAA5B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAoM,IACfjM,EAAA5B,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA6N,GAAA1G,KAAA1F,KAAMC,KAEDoM,eAAiBlM,EAAKmM,mBAE3BnM,EAAKoM,QAAUpM,EAAKoM,QAAQjD,KAAb/K,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA4B,KALAA,yFAQOqM,GACtBxM,KAAKyM,wDAGUC,EAAWC,GAC1B3M,KAAKuM,sDAGW,IAAA7C,EAAA1J,KAChB4M,UAAU1N,QACL2N,GAAG,YAAa,kBAAMnD,EAAKoD,cAC3BD,GAAG,UAAW,kBAAMnD,EAAKqD,YAE9B/M,KAAKT,MAAQ,IACbS,KAAKR,OAAS,IAEdQ,KAAKgN,KAAOJ,OAAOK,eACdC,UAAU,CAAClN,KAAKT,MAAQ,EAAGS,KAAKR,OAAS,IACzC2N,UAAU,IACVC,MAAM,KAEXpN,KAAKqN,IAAMT,OAAOK,eACbC,UAAU,CAAClN,KAAKT,MAAQ,EAAGS,KAAKR,OAAS,IACzC2N,UAAU,IACVC,MAAM,KAEXpN,KAAKsN,KAAOV,OAAOU,OAAOC,WAAWvN,KAAKgN,MAAMQ,YAAY,GAE5DxN,KAAKyN,OAASb,OAAOc,OAChBlC,EAAE,SAAUjL,GACT,OAAOA,EAAE,KAEZkL,EAAE,SAAUlL,GACT,OAAOA,EAAE,KAEZoN,YAAY,YACZC,QAAQ,GAEb5N,KAAK6N,MAAQ,GACb7N,KAAK8N,SAAW,GAEhB9N,KAAK+N,IAAMnB,UAAU,YAAYoB,OAAO,OACnCC,KAAK,QAASjO,KAAKT,OACnB0O,KAAK,SAAUjO,KAAKR,QACpBqN,GAAG,YAAa,kBAAMnD,EAAKwE,cAEhCC,eACKC,MAAMxB,QAAS,mBACfyB,MAAM,SAACC,EAAOC,GAAR,OAAkB7E,EAAK8E,MAAMF,EAAOC,EAAO7E,KAEtD1J,KAAKwO,MAAQxO,KAAKwO,MAAMlF,KAAKtJ,MAC7BA,KAAKkO,UAAYlO,KAAKkO,UAAU5E,KAAKtJ,MACrCA,KAAK8M,UAAY9M,KAAK8M,UAAUxD,KAAKtJ,MACrCA,KAAK+M,QAAU/M,KAAK+M,QAAQzD,KAAKtJ,oCAG/BsO,EAAOC,EAAO/D,GAChBA,EAAK+D,MAAQA,EACbvO,KAAKyM,kDAGG,IAAAgC,EAAAzO,KACR,GAAIA,KAAKC,MAAMI,SAAYL,KAAKC,MAAMI,QAAQ,IAAOL,KAAKC,MAAMI,QAAQ,GAAGqO,SAA3E,CAKA1O,KAAK+N,IAAIY,UAAU,KAAKC,SAExB,IAAIC,EAAa7O,KAAK+N,IAAIC,OAAO,QAAQA,OAAO,kBAC3CC,KAAK,KAAM,cACXA,KAAK,KAAM,OACXA,KAAK,KAAM,OAChBY,EAAWb,OAAO,QAAQC,KAAK,SAAU,MAAMA,KAAK,aAAc,QAClEY,EAAWb,OAAO,QAAQC,KAAK,SAAU,QAAQA,KAAK,aAAc,QAapE,IAAIa,EAAgB9O,KAAK+N,IAAIC,OAAO,QAAQA,OAAO,kBAC9CC,KAAK,KAAM,iBACXA,KAAK,KAAM,OACXA,KAAK,KAAM,OAChBa,EAAcd,OAAO,QAChBC,KAAK,SAAU,OAAOA,KAAK,aAAc,QACzCA,KAAK,eAAgB,KAC1Ba,EAAcd,OAAO,QAChBC,KAAK,SAAU,QAAQA,KAAK,aAAc,WAC1CA,KAAK,eAAgB,OAE1B,IAAIc,EAAc/O,KAAK+N,IAAIC,OAAO,QAAQA,OAAO,kBAC5CC,KAAK,KAAM,eACXA,KAAK,KAAM,OACXA,KAAK,KAAM,OAChBc,EAAYf,OAAO,QACdC,KAAK,SAAU,OAAOA,KAAK,aAAc,QACzCA,KAAK,eAAgB,MAC1Bc,EAAYf,OAAO,QACdC,KAAK,SAAU,QAAQA,KAAK,aAAc,QAC1CA,KAAK,eAAgB,KAE1BjO,KAAK+N,IAAIC,OAAO,WACXC,KAAK,KAAmB,GAAbjO,KAAKT,OAAa0O,KAAK,KAAM,KACxCA,KAAK,KAA0B,GAApBjO,KAAKgN,KAAKI,SACrBa,KAAK,KAA0B,IAApBjO,KAAKgN,KAAKI,SACrBa,KAAK,QAAS,YACdtE,MAAM,OAAQ,qBAEnB3J,KAAK+N,IAAIC,OAAO,UACXC,KAAK,KAAMjO,KAAKT,MAAQ,GAAG0O,KAAK,KAAMjO,KAAKR,OAAS,GACpDyO,KAAK,IAAKjO,KAAKgN,KAAKI,SACpBa,KAAK,QAAS,YACdtE,MAAM,OAAQ,oBAEnB,IAAIqF,EAAOC,KAAiBjP,KAAKuO,MAAMvO,KAAKuO,MAAMW,QAAQF,MAE1DhP,KAAK+N,IAAIC,OAAO,QACXmB,MAAMH,GACNf,KAAK,QAAS,iBACdA,KAAK,IAAKjO,KAAKsN,MACf3D,MAAM,OAAQ,WAEnB3J,KAAK+N,IAAIC,OAAO,UACXC,KAAK,KAAMjO,KAAKT,MAAQ,GAAG0O,KAAK,KAAMjO,KAAKR,OAAS,GACpDyO,KAAK,IAAKjO,KAAKgN,KAAKI,SACpBa,KAAK,QAAS,YACdtE,MAAM,OAAQ,yBAEnB3J,KAAK+N,IAAIC,OAAO,UACXC,KAAK,KAAMjO,KAAKT,MAAQ,GAAG0O,KAAK,KAAMjO,KAAKR,OAAS,GACpDyO,KAAK,IAAKjO,KAAKgN,KAAKI,SACpBa,KAAK,QAAS,YACdtE,MAAM,OAAQ,uBAEnB3J,KAAK+N,IAAIC,OAAO,KAAKC,KAAK,QAAS,UAC9BU,UAAU,QAAQhJ,KAAK3F,KAAKoP,aAC5BC,QAAQrB,OAAO,QACfC,KAAK,QAAS,SACdA,KAAK,IAAKjO,KAAKsN,MAEpBtN,KAAK+N,IAAIC,OAAO,KAAKC,KAAK,QAAS,QAC9BU,UAAU,QAAQhJ,KAAK3F,KAAKsP,eAC5BD,QAAQrB,OAAO,QACfC,KAAK,QAAS,OACdA,KAAK,IAAKjO,KAAKsN,MACf3D,MAAM,eAAgB,SAAUpJ,GAC7B,OAAO1B,KAAK0Q,IAAI,GAAI1Q,KAAK2Q,IAAIjP,EAAEkP,WAAWC,MAAQ1P,KAAKqM,eAAiB,GAAI,MAGpFrM,KAAK+N,IAAIC,OAAO,KAAKC,KAAK,QAAS,UAC9BU,UAAU,QAAQhJ,KAAK3F,KAAK2P,YAC5BN,QAAQrB,OAAO,QACfC,KAAK,QAAS,SACdA,KAAK,SAAU,SAAC1N,GACb,OAAOA,EAAEqP,QAAQ/P,OAAS,EAAI,MAAQ,YAEzC8J,MAAM,eAAgB,SAACpJ,GACpB,OAAO1B,KAAK0Q,IAAI,GAAI1Q,KAAK2Q,IAAIjP,EAAEmP,MAAQjB,EAAKpC,eAAiB,GAAI,MAEpE4B,KAAK,IAAK,SAAC1N,GACR,OAAOkO,EAAKhB,OAAOgB,EAAKoB,WAAWtP,MAG3CP,KAAKuM,sDAIL,IAAIuD,EAAM,EADKlK,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEf,IAFe,IAEfC,EAFe+J,EAAA,eAEPpQ,EAFOqG,EAAAQ,MAGX,IAAI7G,EAAOuH,YACP,iBAEJ4I,GAAOvR,OAAOyR,KAAKrQ,EAAOuH,aAAa5G,IAAI,SAACsC,EAAK4G,GAC7C,OAAO7J,EAAOuH,YAAYtE,GAAKqN,IAAMtQ,EAAOuH,YAAYtE,GAAKsN,MAC9DrS,OAAO,SAAC4C,EAAG0P,GAAJ,OAAU1P,EAAI0P,GAAG,IAN/BlK,EAAkBjG,KAAKC,MAAMI,QAA7B8F,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAsCmK,IAFvB,MAAAtI,GAAA5B,GAAA,EAAAC,EAAA2B,EAAA,YAAA7B,GAAA,MAAAK,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAA7B,EAAA,MAAAC,GAUf,OAAOgK,sCAGC,IAAAM,EAAApQ,KAEJqQ,EAAYrQ,KAAKC,MAAMI,QAAQ,GAAGqO,SAClC2B,IACAA,EAAY,CAACC,IAAM,EAAEC,IAAM,IAE/B,IAAIC,EAAO,CAAC,CACRzI,KAAM,UACN0I,SAAU,CAAC1I,KAAM,QAAS2I,YAAa,CAACL,EAAUC,IAAKD,EAAUE,QAEjEI,EAAa,GAVTjK,GAAA,EAAAC,GAAA,EAAAC,OAAAb,EAAA,IAWR,IAXQ,IAWRc,EAXQ+J,EAAA,eAWAjR,EAXAkH,EAAAL,MAYJ,IAAI7G,EAAOuH,YACP,iBAEJ,IAAI2J,EAAStS,OAAOyR,KAAKrQ,EAAOuH,aAAa5G,IAAI,SAACsC,EAAK4G,GACnD,IAAKvL,GAAa2E,EAAK,CAACwN,EAAKnQ,MAAM7B,KAAM,qBAAsB,iBAAkB,CAC7E,IAAI0S,EAAMnR,EAAOuH,YAAYtE,GAAK8L,SAIlC,OAHIoC,IACAA,EAAM,CAACR,IAAI,EAAGC,IAAI,IAEf,CAACxI,KAAM,UAAW0I,SAAU,CAAC1I,KAAM,QAAS2I,YAAa,CAACI,EAAIR,IAAKQ,EAAIP,OAElF,OAAO,OACRQ,OAAO,SAAUC,GAChB,OAAOA,IAEXL,EAAU,GAAA1L,OAAA1G,OAAA0S,GAAA,EAAA1S,CAAOoS,GAAPpS,OAAA0S,GAAA,EAAA1S,CAAsBsS,KAhBpC/J,EAAkB9G,KAAKC,MAAMI,QAA7B8F,OAAAC,cAAAM,GAAAG,EAAAC,EAAAT,QAAAC,MAAAI,GAAA,EAAsCkK,IAX9B,MAAAnJ,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GA8BR,SAAA3B,OAAWuL,EAAXjS,OAAA0S,GAAA,EAAA1S,CAAoBoS,0CAGV,IAAAO,EAAAlR,KACNmR,EAAMnR,KAAKC,MAAMI,QAAQ,GAAGqO,SAC5B0C,EAAY,GAFNC,GAAA,EAAAC,GAAA,EAAAC,OAAAxL,EAAA,IAGV,IAHU,IAGVyL,EAHUC,EAAA,eAGF9R,EAHE6R,EAAAhL,MAIN,IAAI7G,EAAOuH,YACP,iBAEJ,IAAIwK,EAAQnT,OAAOyR,KAAKrQ,EAAOuH,aAAa5G,IAAI,SAACsC,EAAK4G,GAClD,IAAIsH,EAAMnR,EAAOuH,YAAYtE,GAAK8L,SAIlC,OAHIoC,IACAA,EAAM,CAACR,IAAI,EAAGC,IAAI,IAEjBtS,GAAa2E,EAAK,CAACsO,EAAKjR,MAAM7B,KAAM,qBAAsB,iBAWxD,KAVI,CACH2J,KAAQ,UACR0H,WAAc,CACVC,MAAS/P,EAAOuH,YAAYtE,GAAKqN,IAAMtQ,EAAOuH,YAAYtE,GAAKsN,IAC/DN,QAAWjQ,EAAOuH,YAAYtE,GAAKgN,QACnC+B,IAAMhS,EAAOgS,KAEjBlB,SAAY,CAAC1I,KAAQ,aAAc2I,YAAe,CAAC,CAACS,EAAIb,IAAKa,EAAIZ,KAAM,CAACO,EAAIR,IAAKQ,EAAIP,UAI9FQ,OAAO,SAAUC,GAChB,OAAOA,IAEXI,EAAS,GAAAnM,OAAA1G,OAAA0S,GAAA,EAAA1S,CAAO6S,GAAP7S,OAAA0S,GAAA,EAAA1S,CAAqBmT,KAxBlCE,EAAkB5R,KAAKC,MAAMI,QAA7B8F,OAAAC,cAAAiL,GAAAG,EAAAI,EAAAvL,QAAAC,MAAA+K,GAAA,EAAsCI,IAH5B,MAAAhK,GAAA6J,GAAA,EAAAC,EAAA9J,EAAA,YAAA4J,GAAA,MAAAO,EAAAlK,QAAAkK,EAAAlK,SAAA,WAAA4J,EAAA,MAAAC,GA8BV,OAAOH,qCAGA,IAAAS,EAAA7R,KACHmR,EAAMnR,KAAKC,MAAMI,QAAQ,GAAGqO,SAC5BoD,EAAY,GAFTC,GAAA,EAAAC,GAAA,EAAAC,OAAAlM,EAAA,IAGP,IAHO,IAGPmM,EAHOC,EAAA,eAGCxS,EAHDuS,EAAA1L,MAIH,IAAI7G,EAAOuH,YACP,iBAEJ,IAAI2G,EAAQtP,OAAOyR,KAAKrQ,EAAOuH,aAAa5G,IAAI,SAACsC,EAAK4G,GAClD,IAAIsH,EAAMnR,EAAOuH,YAAYtE,GAAK8L,SAIlC,OAHIoC,IACAA,EAAM,CAACR,IAAI,EAAGC,IAAI,IAEjBtS,GAAa2E,EAAK,CAACiP,EAAK5R,MAAM7B,KAAM,qBAAsB,iBASxD,KARI,CACHgU,OAAQ,CAACjB,EAAIb,IAAKa,EAAIZ,KACtBxQ,OAAQ,CAAC+Q,EAAIR,IAAKQ,EAAIP,KACtBb,MAAO/P,EAAOuH,YAAYtE,GAAKqN,IAAMtQ,EAAOuH,YAAYtE,GAAKsN,IAC7DN,QAASjQ,EAAOuH,YAAYtE,GAAKgN,QACjC+B,IAAKhS,EAAOgS,OAIrBZ,OAAO,SAAUC,GAChB,OAAOA,IAEXc,EAAS,GAAA7M,OAAA1G,OAAA0S,GAAA,EAAA1S,CAAOuT,GAAPvT,OAAA0S,GAAA,EAAA1S,CAAqBsP,KAtBlCwE,EAAkBrS,KAAKC,MAAMI,QAA7B8F,OAAAC,cAAA2L,GAAAG,EAAAG,EAAAhM,QAAAC,MAAAyL,GAAA,EAAsCI,IAH/B,MAAA1K,GAAAuK,GAAA,EAAAC,EAAAxK,EAAA,YAAAsK,GAAA,MAAAM,EAAA3K,QAAA2K,EAAA3K,SAAA,WAAAsK,EAAA,MAAAC,GA4BP,OAAOH,sCAKP9R,KAAKsS,GAAK,CAAC1F,SAAS2F,MAAO3F,SAAS4F,OACpCxS,KAAKyS,GAAKzS,KAAKgN,KAAK0F,SACpB9F,SAAS+F,qDAIT,GAAI3S,KAAKsS,GAAI,CACT,IAAIM,EAAK,CAAChG,SAAS2F,MAAO3F,SAAS4F,OAC7BK,EAAK,CAAC7S,KAAKyS,GAAG,IAAMG,EAAG,GAAK5S,KAAKsS,GAAG,IAAM,EAAGtS,KAAKyS,GAAG,IAAMzS,KAAKsS,GAAG,GAAKM,EAAG,IAAM,GACvFC,EAAG,GAAKA,EAAG,GAAK,GAAK,GACjBA,EAAG,IAAM,IAAM,GACXA,EAAG,GACX7S,KAAKgN,KAAK0F,OAAOG,GACjB7S,KAAKqN,IAAIqF,OAAOG,GAChB7S,KAAKuM,6CAKLvM,KAAKsS,KACLtS,KAAK8M,YACL9M,KAAKsS,GAAK,2CAIL/R,GACT,IAEIuS,EAAOC,EAFPC,EAAYhT,KAAKgN,KAAKiG,OAAO,CAACjT,KAAKT,MAAQ,EAAGS,KAAKR,OAAS,IAC5D0T,EAAMtG,OAAOuG,WAGb5S,EAAE6R,QACFU,EAAQvS,EAAE6R,OACVW,EAAMxS,EAAER,SAGR+S,EAAQvS,EAAEkQ,SAASC,YAAY,GAC/BqC,EAAMxS,EAAEkQ,SAASC,YAAY,IAGjC,IAAI0C,EAAa,KAAOF,EAAIG,SAAS,CAACjB,OAAQU,EAAO/S,OAAQiT,IACzDM,EAAW,KAAOJ,EAAIG,SAAS,CAACjB,OAAQW,EAAKhT,OAAQiT,IAIzD,OAFWpG,SAAS2G,SAAS9K,OAAO,EAAE,GAAI,IAAIhK,MAAM,CAAC,EAAG,IAEjD+U,CADIJ,EAAaE,EAAWF,EAAaE,sCAIzCG,GACP,IAAIrB,EAASqB,EAAIrB,OACbrS,EAAS0T,EAAI1T,OAEb2T,EAAM1T,KAAK2T,mBAAmBvB,EAAQrS,EAAQ,IAIlD,MAHa,CAACC,KAAKgN,KAAKoF,GACpBpS,KAAKqN,IAAIqG,GACT1T,KAAKgN,KAAKjN,+CAIC+S,EAAOC,EAAKjC,GAE3B,OADmBlE,OAAOe,YAAYmF,EAAOC,EACtCa,CAAa9C,qCAGd,IAAA+C,EAAA7T,KACAwK,EAAOxK,KACbA,KAAK+N,IAAIY,UAAU,SAASV,KAAK,IAAKjO,KAAKsN,MAC3CtN,KAAK+N,IAAIY,UAAU,UAAUV,KAAK,IAAKjO,KAAKsN,MAC5CtN,KAAK+N,IAAIY,UAAU,QAAQV,KAAK,IAAKjO,KAAKsN,MACrCW,KAAK,UAAW,SAAC1N,GACd,OAAGiK,EAAKvK,MAAMI,QAAQyT,KAAK,SAAAC,GAAE,OAAEA,EAAGpC,MAAQpR,EAAEkP,WAAWkC,MAC5CkC,EAAKG,aAAazT,GAEtB,IAKfP,KAAK+N,IAAIY,UAAU,UACdV,KAAK,IAAK,SAAC1N,GACR,OAAOsT,EAAKpG,OAAOoG,EAAKhE,WAAWtP,MAEtC0N,KAAK,UAAW,SAAC1N,GACd,OAAGiK,EAAKvK,MAAMI,QAAQyT,KAAK,SAAAC,GAAE,OAAEA,EAAGpC,MAAQpR,EAAEoR,MACjCkC,EAAKG,aAAazT,GAEtB,qCAMf,OAAOC,EAAAC,EAAAC,cAAA,OAAKuT,GAAG,UAAUC,MAAM,MAAM1U,OAAO,eAlYbyC,IAAMC,WA0Y9BC,wBAnZA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbO,aAAcT,EAAMoC,OAAOI,UA+YhBzC,CAAmBiK,6GC1X5B+H,eAEF,SAAAA,EAAYlU,GAAO,IAAAE,EAAA,OAAA5B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAmU,IACfhU,EAAA5B,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA4V,GAAAzO,KAAA1F,KAAMC,KAEDkJ,MAAQ,CAACiL,gBAAiBjU,EAAKF,MAAMI,QAAQC,IAAI,SAAAC,GAAC,OAAIA,EAAEoR,OAE7DxR,EAAKkU,aAAelU,EAAKkU,aAAa/K,KAAlB/K,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA4B,KALLA,4EAQNR,GACOpB,OAAA0S,GAAA,EAAA1S,CAAIyB,KAAKmJ,MAAMiL,iBAAiBN,KAAK,SAAAvT,GAAC,OAAIA,IAAMZ,EAAOgS,MAEnE3R,KAAKyJ,SAAS,CAAC2K,gBAAiB7V,OAAA0S,GAAA,EAAA1S,CAAIyB,KAAKmJ,MAAMiL,iBAAiBrD,OAAO,SAAAuD,GAAC,OAAIA,IAAM3U,EAAOgS,QAEzF3R,KAAKyJ,SAAS,CAAC2K,gBAAe,GAAAnP,OAAA1G,OAAA0S,GAAA,EAAA1S,CAAMyB,KAAKmJ,MAAMiL,iBAAjB,CAAkCzU,EAAOgS,yCAKtE,IAAAjI,EAAA1J,KACEI,EAAWJ,KAAKC,MAAhBG,QAEHmU,EAAmBvU,KAAKC,MAAMI,QAAQC,IAAI,SAAAC,GAAC,OAAIC,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAC/CgU,QACIjU,EAAAC,EAAAC,cAACgU,GAAAjU,EAAD,CAAUkU,QAASjL,EAAKP,MAAMiL,gBAAgBN,KAAK,SAAAQ,GAAC,OAAIA,IAAM/T,EAAEoR,MACtDiD,SAAU,kBAAMlL,EAAK2K,aAAa9T,IAAIiG,MAAOjG,EAAEX,OAE7DkJ,MAAOpJ,GAAca,OAGzB,MAAO,CACHC,EAAAC,EAAAC,cAAA,OAAKkC,IAAK,SAAU1B,UAAWd,EAAQyC,eACvCrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYmC,IAAK,QAASG,QAAQ,KAAKC,cAAY,EAACpC,UAAU,MAA9D,oBAGAJ,EAAAC,EAAAC,cAAA,OAAKQ,UAAWgC,IAAW9C,EAAQ+C,OAAQ/C,EAAQgD,WAE/C5C,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM6C,WAAS,EAACd,QAAS,IACrBhC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,QAAQa,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtCnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,YAAayF,MAAO,CAACkL,UAAW,WAC5DrU,EAAAC,EAAAC,cAACoU,GAAD,CACIzU,QAASL,KAAKC,MAAMI,QAAQ0Q,OAAO,SAAAxQ,GAAC,OAAImJ,EAAKP,MAAMiL,gBAAgBN,KAAK,SAAAQ,GAAC,OAAIA,IAAM/T,EAAEoR,QACrFvT,KAAM4B,KAAKC,MAAM7B,UAIjCoC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,YAAYa,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1CnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAC5B1D,EAAAC,EAAAC,cAACqU,GAAAtU,EAAD,CAAaG,UAAU,WAAWM,UAAWd,EAAQ4U,aACjDxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CAAWG,UAAU,UAArB,wCACAJ,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,KACK8T,iBAtDXtS,IAAMC,WAuErBC,wBA/FA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbO,aAAcT,EAAMoC,OAAOI,QAC3BzB,OAAQ,CACJ5D,MAAO,QAEX6D,SAAU,CACN4B,QAAO,SAEXzB,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KA2EHlD,CAAmBgS,ICnG5BgB,oLAEO,IACE/U,EAAWJ,KAAKC,MAAhBG,QAIP,MAAO,CACHI,EAAAC,EAAAC,cAAA,OAAKkC,IAAK,SAAU1B,UAAWd,EAAQyC,eACvCrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYmC,IAAK,QAASG,QAAQ,KAAKC,cAAY,EAACpC,UAAU,MAA9D,mBATUqB,IAAMC,WAoBbC,wBA3BA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbO,aAAcT,EAAMoC,OAAOI,UAuBhBzC,CAAmBgT,kICrB5BC,eACF,SAAAA,EAAYnV,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAoV,GAAA7W,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA6W,GAAA1P,KAAA1F,KACVC,0EAIN,IAAIoV,EAAS,GAETC,EAAa,EACbC,EAAa,EAGjB,IAAK,IAAItO,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9B,IAAGjJ,GAAagJ,EAAK,CAACjH,KAAKC,MAAM7B,KAAM,qBAAsB,iBAA7D,CAGA,IAAIoX,EAAKxV,KAAKC,MAAMN,OAAOuH,YAAYD,GAAK2I,QAAQkE,KAAK,SAAA2B,GAAC,OAAIA,EAAEC,MAAM5B,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,QAAQ,oBAAsB,MAC5GC,EAAK7V,KAAKC,MAAMN,OAAOuH,YAAYD,GAAK2I,QAAQkE,KAAK,SAAA2B,GAAC,OAAIA,EAAEC,MAAM5B,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,QAAQ,WAAa,MAYvG,GAVIJ,KACAA,EAAKM,KAAKC,MAAMD,KAAKE,UAAUR,KAC5BE,MAAQnX,OAAA0S,GAAA,EAAA1S,CAAIiX,EAAGE,OAAO3E,OAAO,SAAA4E,GAAC,OAAIA,EAAEC,QAAQ,oBAAsB,KAGrEC,KACAA,EAAKC,KAAKC,MAAMD,KAAKE,UAAUH,KAC5BH,MAAQnX,OAAA0S,GAAA,EAAA1S,CAAIsX,EAAGH,OAAO3E,OAAO,SAAA4E,GAAC,OAAIA,EAAEC,QAAQ,WAAa,KAG5DJ,GAAMA,EAAGE,MAAM7V,OAAS,EAAG,CAC3ByV,GAAcE,EAAGE,MAAM7V,OAGvB,IAAIoW,EAAWT,EAAGE,MAAMpV,IAAI,SAAAgH,GACxB,IAAIrI,EAAM,qCAAuCqI,EAAM4O,UAAU5O,EAAM6O,YAAY,KAAO,GAAGvY,MAAM,KAAK,GACxG,OAAO4C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG0V,KAAK,IAAIpV,QAAS,kBAAMhC,GAAeC,KAAOqI,MAEjE+N,EAAOlO,KAAK3G,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eAAf,sBAAiD+F,EAAjD,0BACJuO,EAAGE,MAAM7V,OADL,iDAC2DoW,EAASzV,EAAAC,EAAAC,cAAA,WADpE,+DAIhB,GAAImV,GAAMA,EAAGH,MAAM7V,OAAS,EAAG,CAC3B0V,GAAcM,EAAGH,MAAM7V,OACvB,IAAIoW,EAAWJ,EAAGH,MAAMpV,IAAI,SAAAgH,GACxB,IAAIrI,EAAM,qCAAuCqI,EAAM4O,UAAU5O,EAAM6O,YAAY,KAAO,GAAGvY,MAAM,KAAK,GACxG,OAAO4C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KACR0V,KAAK,IAAIpV,QAAS,kBAAMhC,GAAeC,KAAOqI,MAEtD+N,EAAOlO,KAAK3G,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eAAf,sBAAiD+F,EAAjD,0BACJ4O,EAAGH,MAAM7V,OADL,yCACmDoW,EAASzV,EAAAC,EAAAC,cAAA,WAD5D,wIAOpB,IAAIsD,EAAM,KAQV,OANIA,EADAsR,EAAa,EACL9U,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,oCACDgR,EAAa,GAAKC,EAAa,EAC9B/U,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,kDAEA9D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,+BAEL9D,EAAAC,EAAAC,cAAC2V,GAAA5V,EAAD,KACHD,EAAAC,EAAAC,cAAC4V,GAAA7V,EAAD,CAAuB8V,WAAY/V,EAAAC,EAAAC,cAAC8V,GAAA/V,EAAD,OAC9BuD,GAELxD,EAAAC,EAAAC,cAAC+V,GAAAhW,EAAD,KACID,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACK4U,YArEMpT,IAAMC,WA4E3BwU,eACF,SAAAA,EAAYzW,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAA0W,GAAAnY,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAAmY,GAAAhR,KAAA1F,KACVC,yFAGc0W,EAAO1P,GAC3B,IAAI2P,EAAK5W,KAAKC,MAAMN,OAAOuH,YAAYD,GAAK2I,QAAQkE,KAAK,SAAA2B,GAAC,OAAIA,EAAEC,MAAM5B,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,QAAQe,IAAU,MAMpG,OAJIC,KACAA,EAAKd,KAAKC,MAAMD,KAAKE,UAAUY,KAC5BlB,MAAQnX,OAAA0S,GAAA,EAAA1S,CAAIqY,EAAGlB,OAAO3E,OAAO,SAAA4E,GAAC,OAAIA,EAAEC,QAAQe,IAAU,KAEtDC,0CAGKD,EAAOE,EAAUxB,GAC7B,IAAIyB,EAAa,EACjB,IAAK,IAAI7P,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9B,IAAGjJ,GAAagJ,EAAK,CAACjH,KAAKC,MAAM7B,KAAM,qBAAsB,iBAA7D,CAGA,IAAIwY,EAAK5W,KAAK+W,wBAAwBJ,EAAO1P,GAC7C,GAAI2P,GAAMA,EAAGlB,MAAM7V,OAAS,EAAG,CAC3BiX,GAAcF,EAAGlB,MAAM7V,OAEvB,IAAIoW,EAAWW,EAAGlB,MAAMpV,IAAI,SAAAgH,GACxB,IAAIrI,EAAM,qCAAuCqI,EAAM4O,UAAU5O,EAAM6O,YAAY,KAAO,GAAGvY,MAAM,KAAK,GACxG,OAAO4C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG0V,KAAK,IAAIpV,QAAS,kBAAMhC,GAAeC,KAAOqI,MAEjE+N,EAAOlO,KAAK3G,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eAAf,sBAAiD+F,EAAjD,0BACJ2P,EAAGlB,MAAM7V,OADL,0BACoCgX,EADpC,KACgDZ,KAGpE,OAAOa,mCAIW9W,KAAKC,MAAhBG,QADF,IAEDiV,EAAS,GAETyB,EAAa9W,KAAKgX,gBAAgB,cAAe,qCAAsC3B,GACvF4B,EAAcjX,KAAKgX,gBAAgB,cAAe,8EAA+E3B,GACjI6B,EAAUlX,KAAKgX,gBAAgB,UAAW,4DAA6D3B,GACvG8B,EAAanX,KAAKgX,gBAAgB,aAAc,wDAAyD3B,GACzG+B,EAAOpX,KAAKgX,gBAAgB,OAAQ,+BAAgC3B,GAIpErR,GAHMhE,KAAKgX,gBAAgB,MAAO,oDAAqD3B,GAC5ErV,KAAKgX,gBAAgB,WAAY,wEAAyE3B,GAE7G,MAQZ,OANIrR,EADa,EAAb8S,EAA+B,EAAdG,EAA4B,EAAVC,EAA2B,EAAbC,EAAwB,EAAPC,EAAW,EACrE5W,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,sBACY,EAAbwS,EAA+B,EAAdG,EAA4B,EAAVC,EAA2B,EAAbC,EAAiB,EACjE3W,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,sBAEA9D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,qCAEL9D,EAAAC,EAAAC,cAAC2V,GAAA5V,EAAD,KACHD,EAAAC,EAAAC,cAAC4V,GAAA7V,EAAD,CAAuB8V,WAAY/V,EAAAC,EAAAC,cAAC8V,GAAA/V,EAAD,OAC9BuD,GAELxD,EAAAC,EAAAC,cAAC+V,GAAAhW,EAAD,KACID,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACK4U,YA9DiBpT,IAAMC,WA0EtCmV,eACF,SAAAA,EAAYpX,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAqX,GAAA9Y,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAA8Y,GAAA3R,KAAA1F,KACVC,yFAGc0W,EAAO1P,GAC3B,IAAI2P,EAAK5W,KAAKC,MAAMN,OAAOuH,YAAYD,GAAK2I,QAAQkE,KAAK,SAAA2B,GAAC,OAAIA,EAAEC,MAAM5B,KAAK,SAAA6B,GAAC,OAAIA,EAAEC,QAAQe,IAAU,MAMpG,OAJIC,KACAA,EAAKd,KAAKC,MAAMD,KAAKE,UAAUY,KAC5BlB,MAAQnX,OAAA0S,GAAA,EAAA1S,CAAIqY,EAAGlB,OAAO3E,OAAO,SAAA4E,GAAC,OAAIA,EAAEC,QAAQe,IAAU,KAEtDC,0CAGKD,EAAOE,EAAUxB,GAC7B,IAAIyB,EAAa,EACjB,IAAK,IAAI7P,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9B,IAAGjJ,GAAagJ,EAAK,CAACjH,KAAKC,MAAM7B,KAAM,qBAAsB,iBAA7D,CAGA,IAAIwY,EAAK5W,KAAK+W,wBAAwBJ,EAAO1P,GAC7C,GAAI2P,GAAMA,EAAGlB,MAAM7V,OAAS,EAAG,CAC3BiX,GAAcF,EAAGlB,MAAM7V,OAEvB,IAAIoW,EAAWW,EAAGlB,MAAMpV,IAAI,SAAAgH,GACxB,IAAIrI,EAAM,qCAAuCqI,EAAM4O,UAAU5O,EAAM6O,YAAY,KAAO,GAAGvY,MAAM,KAAK,GACxG,OAAO4C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG0V,KAAK,IAAIpV,QAAS,kBAAMhC,GAAeC,KAAOqI,MAEjE+N,EAAOlO,KAAK3G,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eAAf,sBAAiD+F,EAAjD,0BACJ2P,EAAGlB,MAAM7V,OADL,0BACoCgX,EADpC,KACgDZ,KAGpE,OAAOa,mCAIW9W,KAAKC,MAAhBG,QADF,IAID4D,EAAQ,KAQZ,OAFIA,EAAQxD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYkJ,MAAO,CAACrF,MAAQ,YAA5B,4BAEL9D,EAAAC,EAAAC,cAAC2V,GAAA5V,EAAD,KACHD,EAAAC,EAAAC,cAAC4V,GAAA7V,EAAD,CAAuB8V,WAAY/V,EAAAC,EAAAC,cAAC8V,GAAA/V,EAAD,OAC9BuD,GAELxD,EAAAC,EAAAC,cAAC+V,GAAAhW,EAAD,KACID,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KAfK,aAtCkBwB,IAAMC,WA2FvCoV,oLAIO,IACElX,EAAWJ,KAAKC,MAAhBG,QAEP,MAAO,CACHI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWd,EAAQiC,MACpB7B,EAAAC,EAAAC,cAAC6W,GAAD,CAAc5X,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,OAC1DoC,EAAAC,EAAAC,cAAC8W,GAAD,CAAyB7X,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,OACrEoC,EAAAC,EAAAC,cAAC+W,GAAD,CAA0B9X,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,gBAXzD6D,IAAMC,WAqBpBC,wBA/CA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFqC,WAAiC,EAArBtC,EAAMI,QAAQC,KAC1BkC,cAAoC,EAArBvC,EAAMI,QAAQC,MAEjCyC,YAAa,CACTC,UAAgC,EAArB/C,EAAMI,QAAQC,MAE7BU,OAAQ,CACJ5D,MAAO,QAEXgE,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KA2BHlD,CAAmBmV,ICpMlBI,IArED7Y,KAAKoK,eAgBhB,SAAAyO,EAAYzX,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAA0X,GAAAnZ,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAAmZ,GAAAhS,KAAA1F,KACVC,0EAMN,IAAI0X,EAAW,EACX5Q,EAAW,EAEXC,EAAW,GACf,IAAK,IAAIC,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9BF,EAASG,KAAK,CAACF,EAAKjH,KAAKC,MAAMN,OAAOuH,YAAYD,KAItD,IADA,IACAG,EAAA,EAAAC,EAAkBL,EAAlBI,EAAAC,EAAAxH,OAAAuH,IAA4B,CAAvB,IAAIE,EAAKD,EAAAD,GACNpH,KAAKC,MAAM7B,MAAQH,GAAaqJ,EAAM,GAAI,CAACtH,KAAKC,MAAM7B,KAAM,qBAAsB,iBAClFuZ,GAAYrQ,EAAM,GAAGC,KAAOD,EAAM,GAAGE,KAErCT,GAAYO,EAAM,GAAGC,KAAOD,EAAM,GAAGE,KAI7C,IAAM7B,EAAO,CAAC,CAAC/F,KAAM,8BAA+B4G,MAAOmR,GAAW,CAAC/X,KAAM,yBAA0B4G,MAAOO,IACxGY,EAAS,CAAC,UAAW,UAAW,UAAW,WAEjD,OAAOnH,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAqBvI,MAAM,OAAOC,OAAQ,KAC7CgB,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAWvI,MAAM,OAAOC,OAAO,OAAOwK,aAAchK,KAAKqJ,YACzD7I,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CACInC,KAAMA,EACNuE,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAY,MAAMC,YAAY,OAC9BnC,KAAK,UACLH,QAAU,SAGNrC,EAAKrF,IAAI,SAACgH,EAAOkC,GAAR,OAAkBhJ,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAMK,KAAMR,EAAO6B,EAAQ7B,EAAO9H,aAGrEW,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQvI,MAAM,MAAM4D,OAAO,WAAW8I,cAAc,SAASC,MAAM,mBA3ChDjK,IAAMC,YCkDrB0V,IAlED/Y,KAAKoK,eAgBhB,SAAA2O,EAAY3X,GAAQ,OAAA1B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAA4X,GAAArZ,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAAqZ,GAAAlS,KAAA1F,KACVC,0EAMN,IAAI4X,EAAU,EACVC,EAAY,EAEZ9Q,EAAW,GACf,IAAK,IAAIC,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9BF,EAASG,KAAK,CAACF,EAAKjH,KAAKC,MAAMN,OAAOuH,YAAYD,KAItD,IADA,IACAG,EAAA,EAAAC,EAAkBL,EAAlBI,EAAAC,EAAAxH,OAAAuH,IAA4B,CAAvB,IAAIE,EAAKD,EAAAD,GACVyQ,GAAWvQ,EAAM,GAAGC,KACpBuQ,GAAaxQ,EAAM,GAAGE,KAG1B,IAAM7B,EAAO,CAAC,CAAC/F,KAAM,iBAAkB4G,MAAOsR,GAAY,CAAClY,KAAM,aAAc4G,MAAOqR,IAChFlQ,EAAS,CAAC,UAAW,UAAW,UAAW,WAEjD,OAAOnH,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAqBvI,MAAM,OAAOC,OAAQ,KAC7CgB,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAWvI,MAAM,OAAOC,OAAO,OAAOwK,aAAchK,KAAKqJ,YACzD7I,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CACInC,KAAMA,EACNuE,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAY,MAAMC,YAAY,OAC9BnC,KAAK,UACLH,QAAU,SAGNrC,EAAKrF,IAAI,SAACgH,EAAOkC,GAAR,OAAkBhJ,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAMK,KAAMR,EAAO6B,EAAQ7B,EAAO9H,aAGrEW,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQ3E,OAAO,WAAW8I,cAAc,SAASC,MAAM,mBAxCrCjK,IAAMC,YC4B9B6V,oLAEO,IACE3X,EAAWJ,KAAKC,MAAhBG,QAEP,MAAO,CACHI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWgC,IAAW9C,EAAQ+C,OAAQ/C,EAAQgD,WAE/C5C,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM6C,WAAS,EAACd,QAAS,IACrBhC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,mBAAmBa,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACjDnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAC5B1D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYuC,cAAY,EAACD,QAAQ,KAAKnC,UAAU,MAAhD,mCAGAJ,EAAAC,EAAAC,cAACsX,GAAD,CAAkBrY,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,UAI1EoC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,kBAAkBa,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAChDnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAC5B1D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYuC,cAAY,EAACD,QAAQ,KAAKnC,UAAU,MAAhD,kCAGAJ,EAAAC,EAAAC,cAACuX,GAAD,CAAiBtY,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,UAIzEoC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAM+C,MAAI,EAACZ,IAAI,UAAUa,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxCnD,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAMS,UAAWd,EAAQmD,MACrB/C,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAaS,UAAWd,EAAQ8D,aAC5B1D,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYuC,cAAY,EAACD,QAAQ,KAAKnC,UAAU,MAAhD,yBAGAJ,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAqBvK,MAAM,OAAOC,OAAQ,KACtCgB,EAAAC,EAAAC,cAACyL,GAAD,CAAe9L,QAAS,CAACL,KAAKC,MAAMN,QAASvB,KAAM4B,KAAKC,MAAM7B,KAAO8H,QAASlG,KAAKC,MAAMiG,wBApChGjE,IAAMC,WAmDpBC,wBAtFA,SAAAC,GAAK,MAAK,CACrBC,KAAK9D,OAAAgG,EAAA,EAAAhG,CAAA,GACE6D,EAAMoC,OAAOC,UADhB,CAEAC,WAAiC,EAArBtC,EAAMI,QAAQC,KAC1BkC,cAAoC,EAArBvC,EAAMI,QAAQC,OAEjCI,aAAcT,EAAMoC,OAAOI,QAASC,YAAa,CAC7CC,SAAU,IACVC,OAAQ,SACRC,QAAO,GAAAC,OAA0B,EAArB7C,EAAMI,QAAQC,KAAnB,SAAAwC,OAAwD,EAArB7C,EAAMI,QAAQC,KAAjD,OAEXyC,YAAa,CACTC,UAAgC,EAArB/C,EAAMI,QAAQC,MAE7BU,OAAQ,CACJ5D,MAAO,QAEX6D,SAAU,CACN4B,QAAO,GAAAC,OAA0B,EAArB7C,EAAMI,QAAQC,KAAnB,SAEXc,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KAyDHlD,CAAmB4V,2GCzD5BG,oLAEO,IACE9X,EAAWJ,KAAKC,MAAhBG,QAEH4G,EAAW,GACf,IAAK,IAAIC,KAAOjH,KAAKC,MAAMN,OAAOuH,YAC9BF,EAASG,KAAK,CAACF,EAAKjH,KAAKC,MAAMN,OAAOuH,YAAYD,KAMtD,OAJAD,EAASmR,KAAK,SAAU1X,EAAG0P,GACvB,OAAOA,EAAE,GAAGF,IAAME,EAAE,GAAGD,KAAOzP,EAAE,GAAGwP,IAAMxP,EAAE,GAAGyP,OAG3C,CACH1P,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAOkJ,MAAO,CAACkL,UAAW,UAAW3T,UAAWd,EAAQiC,KAAMO,IAAK5C,KAAKC,MAAMN,OAAOgS,KACjFnR,EAAAC,EAAAC,cAACoU,GAAD,CAA0BzU,QAAS,CAACL,KAAKC,MAAMN,QAASvB,KAAM4B,KAAKC,MAAM7B,QAE7EoC,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAOS,UAAWd,EAAQiC,MACtB7B,EAAAC,EAAAC,cAAC0X,GAAA3X,EAAD,CAAOS,UAAWd,EAAQiY,OACtB7X,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,KACID,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,KACID,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,WACAD,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,SAAjB,WACA1L,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,SAAjB,YACA1L,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,SAAjB,gBAGR1L,EAAAC,EAAAC,cAAC+X,GAAAhY,EAAD,KACKuG,EAAS1G,IAAI,SAAAoY,GACV,IAoBDzR,EApBK0R,EAAcD,EAAI,GAAGE,QAAQtY,IAAI,SAACmI,GAAD,OAAYjI,EAAAC,EAAAC,cAAA,WAAM+H,KAEvD,OACIjI,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAK8V,EAAI,IACflY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3BH,EAAI,IAETlY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,SAASyM,GAC1BnY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,UAY1BjF,EAZqDyR,EAAI,IAazEhK,SACIzH,EAAIyH,SAASoK,KAAO,KAAO7R,EAAIyH,SAASqK,GAAK,IAE7C,WAfqBvY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWyL,MAAM,SAASwM,EAAI,GAAGzI,IAAMyI,EAAI,GAAGxI,IAA9C,YAA4DwI,EAAI,GAAGxI,IAAnE,WAAgFwI,EAAI,GAAGzI,IAAvF,mBAtCMhO,IAAMC,WA6DjCC,4BAtFA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACF8C,UAAgC,EAArB/C,EAAMI,QAAQC,KACzBiC,WAAiC,EAArBtC,EAAMI,QAAQC,KAC1BkC,cAAoC,EAArBvC,EAAMI,QAAQC,MAEjCyC,YAAa,CACTC,UAAgC,EAArB/C,EAAMI,QAAQC,MAE7BU,OAAQ,CACJ5D,MAAO,QAEXgE,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KAiEHlD,CAAmB+V,ICtE5Bc,uLAGE,OAAGhZ,KAAKC,MAAMN,OAAOsZ,QAAQjZ,KAAKC,MAAMN,OAAOsZ,OAAOjZ,KAAKC,MAAMN,OAAOgS,KAC7D3R,KAAKC,MAAMN,OAAOsZ,OAAOjZ,KAAKC,MAAMN,OAAOgS,KAE/C,+CAIP,OAAG3R,KAAKC,MAAMN,OAAOuZ,SAASlZ,KAAKC,MAAMN,OAAOuZ,QAAQrZ,OAAO,EACpDG,KAAKC,MAAMN,OAAOuZ,QAAQ5Y,IAAI,SAAA6Y,GAAE,OAAE3Y,EAAAC,EAAAC,cAAA,WAAMyY,EAAGvZ,QAE/C,6CAGD,IAAAO,EAAAH,KACN,OAAIA,KAAKC,MAAMN,OAAOyZ,KAInB7a,OAAOyR,KAAKhQ,KAAKC,MAAMN,OAAOyZ,KAAKvZ,OAAO,GAAKtB,OAAOyR,KAAKhQ,KAAKC,MAAMN,OAAOyZ,KAAKrI,OAAO,SAAAsI,GAAI,MAAwC,SAAtClZ,EAAKF,MAAMN,OAAOyZ,IAAIC,GAAMlQ,QAAkBtJ,OAAS,EAC1ItB,OAAOyR,KAAKhQ,KAAKC,MAAMN,OAAOyZ,KAAKrI,OAAO,SAAAsI,GAAI,MAAwC,SAAtClZ,EAAKF,MAAMN,OAAOyZ,IAAIC,GAAMlQ,QAAkB7I,IAAI,SAAA+Y,GAAI,OAAE7Y,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAM2Y,EAAN,OAAgBlZ,EAAKF,MAAMN,OAAOyZ,IAAIC,GAAMzZ,KAA5C,KAAoDO,EAAKF,MAAMN,OAAOyZ,IAAIC,GAAMC,QAAhF,QAJjH,wCAUN,IACElZ,EAAWJ,KAAKC,MAAhBG,QAcHmZ,EAAQvZ,KAAKwZ,WAEjB,OAAOhZ,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAOS,UAAWd,EAAQiC,MACzB7B,EAAAC,EAAAC,cAAC0X,GAAA3X,EAAD,CAAOS,UAAWd,EAAQiY,OACtB7X,EAAAC,EAAAC,cAAC+X,GAAAhY,EAAD,KACID,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,SACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,MAAMlP,MAAO,CAACpK,MAAM,UAApD,SAGAiB,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3B7Y,KAAKC,MAAMN,OAAOC,OAG3BY,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,OACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAAhC,OAGArY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3B7Y,KAAKC,MAAMN,OAAOhC,KAG3B6C,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,QACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAAhC,QAGArY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3B7Y,KAAKC,MAAMN,OAAOgS,MAG3BnR,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,WACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAAhC,WAGArY,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3B7Y,KAAKyZ,cAGdjZ,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,OACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,MAAOlP,MAAO,CAACsC,cAAc,MAAOvH,WAAW,SAA/E,gBAGAlE,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3B7Y,KAAK0Z,eAGdlZ,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAUmC,IAAI,UACVpC,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,MAAMlP,MAAO,CAACsC,cAAc,MAAOvH,WAAW,SAA9E,gBAGAlE,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,CAAWG,UAAU,KAAKiY,MAAM,OAC3BU,cA7FRtX,IAAMC,WA0GhBC,wBAnIA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACF8C,UAAgC,EAArB/C,EAAMI,QAAQC,KACzBiC,WAAiC,EAArBtC,EAAMI,QAAQC,KAC1BkC,cAAoC,EAArBvC,EAAMI,QAAQC,MAEjCyC,YAAa,CACTC,UAAgC,EAArB/C,EAAMI,QAAQC,MAE7BU,OAAQ,CACJ5D,MAAO,QAEXgE,KAAM,CACF/D,OAAQ,OACR8C,QAAS,OACT8C,cAAe,UAEnBtB,UAAW,CACPY,WAAY,UAEhBR,YAAa,CACTmB,SAAU,KA8GHlD,CAAmB6W,ICzH5BW,8MAEFxQ,MAAQ,CACJ3C,MAAO,KAGXoT,aAAe,SAACC,EAAOrT,GACnBrG,EAAKsJ,SAAS,CAACjD,mFAGV,IACEpG,EAAWJ,KAAKC,MAAhBG,QAEH0Z,EAAU,GAYd,OAVyB,IAArB9Z,KAAKmJ,MAAM3C,MACXsT,EAAUtZ,EAAAC,EAAAC,cAACqZ,GAAD,CAAgBpa,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,OAC1C,IAArB4B,KAAKmJ,MAAM3C,MAClBsT,EAAUtZ,EAAAC,EAAAC,cAACsZ,GAAD,CAAgBra,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,KAAM8H,QAASlG,KAAKC,MAAMiG,UACpE,IAArBlG,KAAKmJ,MAAM3C,MAClBsT,EAAUtZ,EAAAC,EAAAC,cAACuZ,GAAD,CAA6Bta,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,OACvD,IAArB4B,KAAKmJ,MAAM3C,QAClBsT,EAAUtZ,EAAAC,EAAAC,cAACwZ,GAAD,CAAYva,OAAQK,KAAKC,MAAMN,OAAQvB,KAAM4B,KAAKC,MAAM7B,QAG/D,CACHoC,EAAAC,EAAAC,cAAA,OAAKkC,IAAK,SAAU1B,UAAWd,EAAQyC,eACvCrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYmC,IAAK,QAASG,QAAQ,KAAKC,cAAY,EAACpC,UAAU,MACzDZ,KAAKC,MAAMN,OAAOC,MAEvBY,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAO0Z,QAAM,GACT3Z,EAAAC,EAAAC,cAAC0Z,EAAA3Z,EAAD,CAAQuI,SAAS,SAAS1E,MAAM,WAAU9D,EAAAC,EAAAC,cAAC2Z,GAAA5Z,EAAD,CACtC+F,MAAOxG,KAAKmJ,MAAM3C,MAClB8T,eAAe,UACfC,UAAU,UACV3F,SAAU5U,KAAK4Z,cAEfpZ,EAAAC,EAAAC,cAAC8Z,GAAA/Z,EAAD,CAAKqI,MAAM,aACXtI,EAAAC,EAAAC,cAAC8Z,GAAA/Z,EAAD,CAAKqI,MAAM,aACXtI,EAAAC,EAAAC,cAAC8Z,GAAA/Z,EAAD,CAAKqI,MAAM,2BACXtI,EAAAC,EAAAC,cAAC8Z,GAAA/Z,EAAD,CAAKqI,MAAM,YAInBgR,UA5Ca7X,IAAMC,WAqDhBC,wBA5DA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbO,aAAcT,EAAMoC,OAAOI,UAwDhBzC,CAAmBwX,wDC0C5Bc,eAQF,SAAAA,EAAYxa,GAAO,IAAAE,EAAA,OAAA5B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAAya,IACfta,EAAA5B,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAAkc,GAAA/U,KAAA1F,KAAMC,KARVkJ,MAAQ,CACJ9J,MAAM,EACNqb,WAAY,WACZC,WAAY,IACZC,iBAAkB,IAGHza,EAWnB0a,iBAAmB,WACf1a,EAAKsJ,SAAS,CAACpK,MAAM,KAZNc,EAenB2a,kBAAoB,WAChB3a,EAAKsJ,SAAS,CAACpK,MAAM,KAhBNc,EA0HnB4a,gBAAkBC,aACd,SAAC9U,EAAS+U,GACN,IAAK/U,EACD,MAAO,GAEX,IAAIgV,EAAUhV,EAAQrI,OAAO,SAACsd,EAAKC,GAAN,OAAevc,KAAK2Q,IAAI2L,EAAKC,EAAK7U,OAAO,GACtE,OAAOL,EAAQ6K,OAAO,SAAAqK,GAAI,OAAIA,EAAK7U,KAAO2U,EAAUD,MAhIzC9a,EAoInBkb,WAAaL,aACT,SAACM,GACG,IAAKA,GAAyB,GAAhBA,EAAMzb,OAChB,MAAO,GAEX,IAAI2J,EAAQ8R,EAAMzb,OAAS,EACvB0b,EAAOzF,KAAKC,MAAMD,KAAKE,UAAUsF,EAAME,QAG3C,IADAhS,IACOA,GAAS,GAAG,CACf,IAAI4R,EAAOE,EAAM9R,GADF5D,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEf,IAFe,IAEfC,EAFe+J,EAAA,eAEN0L,EAFMzV,EAAAQ,MAGPkV,EAAOH,EAAKlb,QAAQyT,KAAK,SAAAvT,GAAC,OAAIA,EAAEoR,MAAQ8J,EAAK9J,MACjD,GAAK+J,EAKD,IAAK,IAAIC,KAAcF,EAAKvU,YAAa,CAErC,IAAI0U,EAAOH,EAAKvU,YAAYyU,GACxBE,EAAOH,EAAKxU,YAAYyU,GACvBE,GAMDA,EAAKrU,MAAQoU,EAAKpU,KAClBqU,EAAKtU,MAAQqU,EAAKrU,KAClBsU,EAAK3L,KAAO0L,EAAK1L,IACjB2L,EAAK5L,KAAO2L,EAAK3L,IAGd2L,EAAKlN,SAEJmN,EAAKnN,SAAWkN,EAAKlN,SAErBmN,EAAKnN,SAAW,CAAC6B,IAAqB,GAAd1R,KAAKid,SAAaxL,IAAoB,IAAdzR,KAAKid,WAdzDJ,EAAKxU,YAAYyU,GAAcC,OATvCL,EAAKlb,QAAQ8G,KAAKsU,IAJ1BxV,EAAiBmV,EAAK/a,QAAtB8F,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAA+BmK,IAFhB,MAAAtI,GAAA5B,GAAA,EAAAC,EAAA2B,EAAA,YAAA7B,GAAA,MAAAK,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAA7B,EAAA,MAAAC,GAqCf0D,IAEJ,OAAO+R,IAjLXpb,EAAKD,SAAWC,EAAKD,SAASoJ,KAAd/K,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA4B,KAChBA,EAAK4b,iBAAmB5b,EAAK4b,iBAAiBzS,KAAtB/K,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA4B,KAJTA,wEAOVJ,GACLC,KAAKyJ,SAAS,CAACiR,WAAY3a,qCAWtB,IAAA2J,EAAA1J,KACEI,EAAWJ,KAAKC,MAAhBG,QAEDkb,EAAQtb,KAAK+a,gBAAgB/a,KAAKC,MAAMiG,QAASlG,KAAKmJ,MAAMwR,YAC5DqB,EAAQhc,KAAKqb,WAAWC,GAE1BW,EAAc,KAElB,GAA8B,aAA1Bjc,KAAKmJ,MAAMuR,WACXuB,EAAczb,EAAAC,EAAAC,cAACwb,GAAD,WACX,GAA8B,mBAA1Blc,KAAKmJ,MAAMuR,WAClBuB,EAAczb,EAAAC,EAAAC,cAACyb,GAAD,CAAe9b,QAAS2b,EAAM3b,QAAS6F,QAASoV,EAAOX,WAAY3a,KAAKmJ,MAAMwR,kBACzF,GAA8B,cAA1B3a,KAAKmJ,MAAMuR,WAClBuB,EAAczb,EAAAC,EAAAC,cAAC0b,GAAD,CAAiB/b,QAAS2b,EAAM3b,QAASjC,KAAM4B,KAAKC,MAAM7B,YACrE,GAA8B,YAA1B4B,KAAKmJ,MAAMuR,WAClBuB,EAAczb,EAAAC,EAAAC,cAAC2b,GAAD,UACX,CACH,IAAIC,EAAMN,EAAM3b,QAAQyT,KAAK,SAAAvT,GAAC,OAAIA,EAAE5C,IAAM+L,EAAKP,MAAMuR,aAIrDuB,EACIzb,EAAAC,EAAAC,cAAC6b,GAAD,CAAY5c,OAAQ2c,EAAKle,KAAM4B,KAAKC,MAAM7B,KAAM8H,QAASoV,IAGjE,OACI9a,EAAAC,EAAAC,cAAA,OAAKQ,UAAWd,EAAQiC,MACpB7B,EAAAC,EAAAC,cAAC8b,EAAA/b,EAAD,MACAD,EAAAC,EAAAC,cAAC0Z,EAAA3Z,EAAD,CACIuI,SAAS,WACT9H,UAAWgC,IAAW9C,EAAQqc,QAAQ,IAEtCjc,EAAAC,EAAAC,cAACgc,EAAAjc,EAAD,CAASkc,gBAAiB3c,KAAKmJ,MAAM9J,KAAM6B,UAAWd,EAAQwE,SAC1DpE,EAAAC,EAAAC,cAACkc,EAAAnc,EAAD,CACI6D,MAAM,UACNuY,aAAW,cACX7b,QAAShB,KAAK6a,iBACd3Z,UAAWgC,IACP9C,EAAQ0c,WACR9c,KAAKmJ,MAAM9J,MAAQe,EAAQ2c,mBAG/Bvc,EAAAC,EAAAC,cAACsc,EAAAvc,EAAD,OAEJD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CACIG,UAAU,KACVmC,QAAQ,KACRuB,MAAM,UACN2Y,QAAM,EACN/b,UAAWd,EAAQ4D,OALvB,WASAxD,EAAAC,EAAAC,cAAA,OAAKQ,UAAWd,EAAQua,YACpBna,EAAAC,EAAAC,cAACwc,GAAAzc,EAAD,CAAmBS,UAAWd,EAAQ+c,YAAa3W,MAAOxG,KAAKmJ,MAAMwR,WAAYyC,WAAS,EACvExI,SAAU5U,KAAK+b,kBAC9Bvb,EAAAC,EAAAC,cAAC2c,GAAA5c,EAAD,CAAc+F,MAAO,QAArB,OAGAhG,EAAAC,EAAAC,cAAC2c,GAAA5c,EAAD,CAAc+F,MAAO,OAArB,OAGAhG,EAAAC,EAAAC,cAAC2c,GAAA5c,EAAD,CAAc+F,MAAO,MAArB,MAGAhG,EAAAC,EAAAC,cAAC2c,GAAA5c,EAAD,CAAc+F,MAAO,KAArB,UAKRhG,EAAAC,EAAAC,cAACkc,EAAAnc,EAAD,CAAY6D,MAAM,WACd9D,EAAAC,EAAAC,cAAC4c,EAAA7c,EAAD,CAAO8c,aAAc,EAAGjZ,MAAM,aAC1B9D,EAAAC,EAAAC,cAAC8c,EAAA/c,EAAD,UAKhBD,EAAAC,EAAAC,cAAC+c,EAAAhd,EAAD,CACIsC,QAAQ,YACR3C,QAAS,CACLsd,MAAOxa,IAAW9C,EAAQud,aAAc3d,KAAKmJ,MAAM9J,MAAQe,EAAQwd,mBAEvEve,KAAMW,KAAKmJ,MAAM9J,MAEjBmB,EAAAC,EAAAC,cAAA,OAAKQ,UAAWd,EAAQyd,aACpBrd,EAAAC,EAAAC,cAACkc,EAAAnc,EAAD,CAAYO,QAAShB,KAAK8a,mBACtBta,EAAAC,EAAAC,cAACod,EAAArd,EAAD,QAGRD,EAAAC,EAAAC,cAACqd,EAAAtd,EAAD,MACAD,EAAAC,EAAAC,cAACsd,GAAD,CAAY9d,SAAUF,KAAKE,SAAUG,QAASL,KAAKC,MAAMI,WAE7DG,EAAAC,EAAAC,cAAA,QAAMQ,UAAWd,EAAQ0Z,SACpBmC,6CAMApC,EAAOrT,GACpBxG,KAAKyJ,SAAS,CAACkR,WAAYnU,WA/HXvE,IAAMC,WAsMfC,wBA5RA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,QAAS,QAEbsC,QAAS,CACLqZ,aAAc,IAElBJ,YAAYtf,OAAAgG,EAAA,EAAAhG,CAAA,CACR+D,QAAS,OACT4b,WAAY,SACZC,eAAgB,WAChBnZ,QAAS,SACN5C,EAAMoC,OAAOI,SAEpB6X,OAAQ,CACJ2B,OAAQhc,EAAMgc,OAAOC,OAAS,EAC9BC,WAAYlc,EAAMmc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQrc,EAAMmc,YAAYE,OAAOC,MACjCC,SAAUvc,EAAMmc,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,WAxBY,IAyBZvf,MAAK,eAAA0F,OAzBO,IAyBP,OACLqZ,WAAYlc,EAAMmc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQrc,EAAMmc,YAAYE,OAAOC,MACjCC,SAAUvc,EAAMmc,YAAYI,SAASI,kBAG7CjC,WAAY,CACRgC,WAAY,GACZE,YAAa,IAEjBjC,iBAAkB,CACdza,QAAS,QAEb0B,MAAO,CACHqB,SAAU,GAEdsY,YAAa,CACT3U,SAAU,WACViW,WAAY,SACZ1f,MA5CY,IA6CZ+e,WAAYlc,EAAMmc,YAAYC,OAAO,QAAS,CAC1CC,OAAQrc,EAAMmc,YAAYE,OAAOC,MACjCC,SAAUvc,EAAMmc,YAAYI,SAASI,kBAG7CnB,iBAAiBrf,OAAA2gB,EAAA,EAAA3gB,CAAA,CACb4gB,UAAW,SACXb,WAAYlc,EAAMmc,YAAYC,OAAO,QAAS,CAC1CC,OAAQrc,EAAMmc,YAAYE,OAAOC,MACjCC,SAAUvc,EAAMmc,YAAYI,SAASC,gBAEzCrf,MAA4B,EAArB6C,EAAMI,QAAQC,MACpBL,EAAMgd,YAAYC,GAAG,MAAQ,CAC1B9f,MAA4B,EAArB6C,EAAMI,QAAQC,OAG7BI,aAAcT,EAAMoC,OAAOI,QAC3BkV,QAAS,CACLzU,SAAU,EACVL,QAA8B,EAArB5C,EAAMI,QAAQC,KACvBjD,OAAQ,QACR8f,SAAU,QAEdC,eAAgB,CACZT,YAAa,IAEjBU,eAAgB,CACZhgB,OAAQ,KAEZigB,GAAI,CACAC,aAAmC,EAArBtd,EAAMI,QAAQC,MAEhCtB,OAAQ,CACJoB,YAAkC,EAArBH,EAAMI,QAAQC,MAE/BkY,WAAY,CACRtV,SAAU,GAEd8X,YAAa,CACT7a,QAAS,kBA0MFH,CAAmBsY,8CCnT5BrY,GAAQud,KAAe,CACzBC,QAAS,CACLpe,QAAS,CACLqe,KAAM,WAEVC,UAAW,CACPD,KAAM,cAqEHE,eA9DX,SAAAA,EAAY9f,GACZ,IAAAE,EAAA,OAAA5B,OAAAgH,EAAA,EAAAhH,CAAAyB,KAAA+f,IACI5f,EAAA5B,OAAAiH,EAAA,EAAAjH,CAAAyB,KAAAzB,OAAAkH,EAAA,EAAAlH,CAAAwhB,GAAAra,KAAA1F,KAAMC,KACD+f,SAEL7f,EAAKgJ,MAAQ,CAAC9I,QAAS,GAAI4f,MAAO,KAAMtgB,OAAQ,KAAMugB,UAAW,GAAIC,cAAe,EAAGC,WAAa,EAAGC,WAAW,EAAOjiB,KAAM,IAJnI+B,wEAOS,IAAAuJ,EAAA1J,KACDwK,EAAOxK,KAEXA,KAAKsgB,GAAK,IAAIC,UAAU,QAAQrhB,OAAOwP,SAAS8R,SAAS,SAEzDxgB,KAAKsgB,GAAGG,OAAS,WACbC,QAAQC,IAAI,mBACZnW,EAAKf,SAAS,CAAC4W,WAAY,KAG/BrgB,KAAKsgB,GAAGM,UAAY,SAAC/G,GACjB6G,QAAQC,IAAI9G,EAAMlU,MAClB,IAAIkb,EAAM/K,KAAKC,MAAM8D,EAAMlU,MACvBkb,EAAI9Y,MAAqB,gBAAb8Y,EAAI9Y,OAChByC,EAAKf,SAAS,CAACpJ,QAAWwgB,EAAIhW,UACL,SAArBL,EAAKrB,MAAM8W,OACXzV,EAAKf,SAAS,CAACwW,MAAS,KAAMC,UAAW,MAG7CW,EAAI9Y,MAAqB,gBAAb8Y,EAAI9Y,OAChByC,EAAKf,SAAS,CAACrL,KAAQyiB,EAAIhW,QAAQzM,OACnCoM,EAAKf,SAAS,CAACpJ,QAAWwgB,EAAIhW,QAAQxK,UACb,SAArBmK,EAAKrB,MAAM8W,OACXzV,EAAKf,SAAS,CAACwW,MAAS,KAAMC,UAAW,MAG7CW,EAAI9Y,MAAqB,YAAb8Y,EAAI9Y,MAChByC,EAAKf,SAAS,CAACvD,QAAW2a,EAAIhW,UAE9BgW,EAAI9Y,MAAqB,gBAAb8Y,EAAI9Y,OAChByC,EAAKf,SAAS,CAACyW,UAAaW,EAAIhW,QAAQiW,OACxCtW,EAAKf,SAAS,CAAC0W,cAAiBU,EAAIhW,QAAQkW,aAIpD/gB,KAAKsgB,GAAGU,QAAU,SAACC,GACZzW,EAAKrB,MAAMkX,YACVa,MAAMpL,KAAKE,UAAUiL,IACrBzW,EAAKf,SAAS,CAAC4W,WAAU,KAE7BK,QAAQC,IAAIM,GACZvX,EAAKsW,2CAKT,OACIxf,EAAAC,EAAAC,cAACygB,GAAA1gB,EAAD,CAAkB2B,MAAOA,IACrB5B,EAAAC,EAAAC,cAAC0gB,GAAD,CAAW/gB,QAASL,KAAKmJ,MAAM9I,QAASjC,KAAM4B,KAAKmJ,MAAM/K,KAAM8H,QAASlG,KAAKmJ,MAAMjD,kBA1DjFhE,aCLEmf,QACW,cAA7BniB,OAAOwP,SAAS8R,UAEe,UAA7BthB,OAAOwP,SAAS8R,UAEhBthB,OAAOwP,SAAS8R,SAASc,MACvB,2DCZNC,IAASC,OAAOhhB,EAAAC,EAAAC,cAAC+gB,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcrT,MAAMsT,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c3695aca.chunk.js","sourcesContent":["const ip4ToInt = ip =>\r\n    ip.split('.').reduce((int, oct) => (int << 8) + parseInt(oct, 10), 0) >>> 0;\r\n\r\nconst isIp4InCidr = ip => cidr => {\r\n    const [range, bits = 32] = cidr.split('/');\r\n    const mask = ~(2 ** (32 - bits) - 1);\r\n    return (ip4ToInt(ip) & mask) === (ip4ToInt(range) & mask);\r\n};\r\n\r\nconst isIp4InCidrs = (ip, cidrs) => cidrs.some(isIp4InCidr(ip));\r\n\r\nfunction getThreatCountConcerning(device, topic, cidr) {\r\n    let cm_threats = 0;\r\n    for (var con in device.connections) {\r\n        if(isIp4InCidrs(con, [cidr, '255.255.255.255/32', '224.0.0.0/24'])){\r\n            continue;\r\n        }\r\n\r\n        let cm = device.connections[con].threats.find(t => t.lists.find(e => e.indexOf(topic) >= 0));\r\n\r\n        if (cm) {\r\n            cm = JSON.parse(JSON.stringify(cm));\r\n            cm.lists = [...cm.lists].filter(e => e.indexOf(topic) >= 0);\r\n        }\r\n        if (cm && cm.lists.length > 0) {\r\n            cm_threats += cm.lists.length;\r\n\r\n        }\r\n    }\r\n    return cm_threats;\r\n\r\n}\r\n\r\n\r\nfunction getDeviceState(device, cidr) {\r\n    let cm_threats = getThreatCountConcerning(device, \"cryptominer\", cidr);\r\n    let invalid_ips = getThreatCountConcerning(device, \"invalid_ips\", cidr);\r\n    let malware = getThreatCountConcerning(device, \"malware\", cidr);\r\n    let ransomware = getThreatCountConcerning(device, \"ransomware\", cidr);\r\n    let spam = getThreatCountConcerning(device, \"spam\", cidr);\r\n\r\n    let sus_level = 0;\r\n\r\n    if (cm_threats * 4 + invalid_ips * 4 + malware * 2 + ransomware * 2 + spam * 1> 9) {\r\n        sus_level = 2;\r\n    } else if (cm_threats * 3 + invalid_ips * 3 + malware * 1 + ransomware * 1 > 4) {\r\n        sus_level = 1;\r\n    } else {\r\n        sus_level = 0;\r\n    }\r\n\r\n\r\n    let cc_threats = getThreatCountConcerning(device, \"command_control\", cidr);\r\n    let bn_threats = getThreatCountConcerning(device, \"botnet\", cidr);\r\n\r\n    let bt_level = 0;\r\n    if (cc_threats > 2) {\r\n        bt_level = 2;\r\n    } else if (cc_threats > 0 || bn_threats > 2) {\r\n        bt_level = 1;\r\n    } else {\r\n        bt_level = 0;\r\n    }\r\n\r\n    return Math.max(bt_level, sus_level);\r\n\r\n}\r\n\r\nfunction openExternally(url) {\r\n    if (window.nw) {\r\n        window.nw.Window.open(url, {focus: true, width: 700, height: 500}, function (new_win) {\r\n            // do something with the newly created window\r\n        });\r\n    } else {\r\n        var win = window.open(url, '_blank');\r\n        win.focus();\r\n    }\r\n}\r\n\r\nfunction getDeviceName(device){\r\n    if(device.name && device.name.length > 2){\r\n        return device.name;\r\n    }else{\r\n        return device.ip;\r\n    }\r\n}\r\n\r\nexport {isIp4InCidrs, getDeviceState, getThreatCountConcerning, openExternally, getDeviceName}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DashboardIcon from '@material-ui/icons/Home';\r\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {getDeviceName} from \"./utils\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n});\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    handleClick(target) {\r\n        this.props.navigate(target);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        let devices = this.props.devices.map(d => <List component=\"div\" disablePadding>\r\n            <ListItem button  onClick={() => this.handleClick(d.ip)} className={classes.nested}>\r\n                <ListItemIcon>\r\n                    <CheckCircleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText inset primary={getDeviceName(d)}/>\r\n            </ListItem>\r\n        </List>)\r\n\r\n        return (\r\n            <List>\r\n                <div>\r\n                    <ListItem button onClick={() => this.handleClick(\"Overview\")}>\r\n                        <ListItemIcon>\r\n                            <DashboardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Overview\"/>\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => this.handleClick(\"Internet_Usage\")}>\r\n                        <ListItemIcon>\r\n                            <DataUsageIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Internet usage\"/>\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => this.handleClick(\"Locations\")}>\r\n                        <ListItemIcon>\r\n                            <MapIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Locations\"/>\r\n                    </ListItem>\r\n                    <ListItem button  onClick={() => this.handleClick(\"Devices\")}>\r\n                        <ListItemIcon>\r\n                            <DevicesIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Devices\"/>\r\n                    </ListItem>\r\n                    <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n                        {devices}\r\n                    </Collapse>\r\n                </div>\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nNavigation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport classNames from 'classnames';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,heroContent: {\r\n        maxWidth: 600,\r\n        margin: '0 auto',\r\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    cardGrid: {\r\n        padding: `${theme.spacing.unit * 8}px 0`,\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nclass Overview extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n\r\n\r\n        return [\r\n            <div key={\"spacer\"} className={classes.appBarSpacer}/>,\r\n            <Typography key={\"typo1\"} variant=\"h4\" gutterBottom component=\"h2\">\r\n            Overview\r\n            </Typography>,\r\n            <Paper  className={classes.root}>\r\n                Everything is fine!!!!\r\n            </Paper>,\r\n            <div className={classNames(classes.layout, classes.cardGrid)}>\r\n                {/* End hero unit */}\r\n                <Grid container spacing={40}>\r\n                    {cards.map(card => (\r\n                        <Grid item key={card} sm={12} md={6} lg={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia\r\n                                    className={classes.cardMedia}\r\n                                    image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\r\n                                    title=\"Image title\"\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Heading\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        This is a media card. You can use this section to describe the content.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\">\r\n                                        View\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nOverview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Overview);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip, Area\r\n} from \"recharts\";\r\nimport {isIp4InCidrs} from \"../utils\";\r\nimport moment from \"moment\";\r\n\r\n\r\nclass DeviceHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        const data = [\r\n        ];\r\n\r\n        for(let time of this.props.history){\r\n            let point = {name: time.time};\r\n            for(let device of time.devices) {\r\n                let external = 0;\r\n\r\n                let sortable = [];\r\n                for (var con in device.connections) {\r\n                    sortable.push([con, device.connections[con]]);\r\n                }\r\n\r\n                let rows = [];\r\n                for (let entry of sortable) {\r\n                    if (!(this.props.cidr && isIp4InCidrs(entry[0], [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24']))) {\r\n                        external += entry[1].bsnd + entry[1].brcv;\r\n                    }\r\n                }\r\n\r\n                point[device.ip] = external/1024/30;\r\n            }\r\n            data.push(point);\r\n        }\r\n\r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n        let areas = this.props.devices.map((d,i) => <Area type='monotone' dataKey={d.ip} stackId=\"1\" stroke={COLORS[i%COLORS.length]} fill={COLORS[i%COLORS.length]} />);\r\n\r\n        return <ResponsiveContainer width=\"100%\" height={250}>\r\n            <AreaChart width=\"100%\" height=\"100%\" data={data}\r\n                          margin={{top: 10, right: 30, left: 0, bottom: 0}}>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"name\" domain={['dataMin', 'dataMax']}\r\n                   name = 'Time'\r\n                   tickFormatter = {(unixTime) => moment(unixTime*1000).format('DD/MM/YYYY HH:mm')}\r\n                   type = 'number'/>\r\n            <YAxis label={{ value: 'kb/s', angle: -90, position: 'insideLeft' }}/>\r\n            {areas}\r\n            <Tooltip/>\r\n\r\n        </AreaChart></ResponsiveContainer>\r\n    }\r\n\r\n}\r\n\r\nDeviceHistory.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default (DeviceHistory);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PieChart from \"recharts/es6/chart/PieChart\";\r\nimport Pie from \"recharts/es6/polar/Pie\";\r\nimport Cell from \"recharts/es6/component/Cell\";\r\nimport ResponsiveContainer from \"recharts/es6/component/ResponsiveContainer\";\r\nimport {getDeviceName, isIp4InCidrs} from \"./utils\";\r\nimport {Legend, Sector} from \"recharts\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport classNames from 'classnames';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport DeviceHistory from \"./device/DeviceHistory\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    cardGrid: {\r\n        padding: `0px 0`,\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, index}) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nconst renderActiveShape = (props, self) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n        cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n        fill, payload, percent, value\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor}\r\n                  fill=\"#333\">{parseFloat(value / 1000 / self.getNumberOfScans()/30).toFixed(2) + \"kB/s\"}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`(${(percent * 100).toFixed(1)}% network load)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst data = [];\r\n\r\nclass InternetUsage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {activeIndex: 0};\r\n\r\n        this.onPieEnter = this.onPieEnter.bind(this);\r\n    }\r\n\r\n    onPieEnter(data, index) {\r\n        this.setState({\r\n            activeIndex: index,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        data.length = 0;\r\n\r\n        for (let device of this.props.devices) {\r\n            let external = 0;\r\n\r\n            let sortable = [];\r\n            for (var con in device.connections) {\r\n                sortable.push([con, device.connections[con]]);\r\n            }\r\n\r\n            let rows = [];\r\n            for (let entry of sortable) {\r\n                if (!(this.props.cidr && isIp4InCidrs(entry[0], [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24']))) {\r\n                    external += entry[1].bsnd + entry[1].brcv;\r\n                }\r\n            }\r\n\r\n            data.push({name: getDeviceName(device), value: external})\r\n\r\n        }\r\n\r\n        return [\r\n            <div key={\"spacer\"} className={classes.appBarSpacer}/>,\r\n            <Typography key={\"typo1\"} variant=\"h4\" gutterBottom component=\"h2\">\r\n                Internet Usage\r\n            </Typography>,\r\n            <div className={classNames(classes.layout, classes.cardGrid)}>\r\n                {/* End hero unit */}\r\n                <Grid container spacing={40}>\r\n                    <Grid item key=\"earth\" sm={12} md={12} lg={12}>\r\n                        <Card className={classes.card} style={{'minHeight':\"500px\"}}>\r\n                            <CardHeader title=\"Average network usage by device\"/>\r\n                            <CardContent className={classes.cardContent}>\r\n\r\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                    <PieChart onMouseEnter={this.onPieEnter}>\r\n                                        <Pie\r\n                                            data={data}\r\n                                            cx=\"50%\"\r\n                                            cy=\"50%\"\r\n                                            labelLine={false}\r\n                                            innerRadius=\"70%\" outerRadius=\"90%\"\r\n                                            fill=\"#8884d8\"\r\n                                            dataKey = \"value\"\r\n                                            activeShape={(props)=>renderActiveShape(props,this)}\r\n                                            activeIndex={this.state.activeIndex}\r\n                                            onMouseEnter={this.onPieEnter}\r\n                                        >\r\n                                            {\r\n                                                data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)\r\n                                            }\r\n                                        </Pie>\r\n                                        <Legend layout='vertical' verticalAlign=\"middle\" align=\"right\"/>\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item key=\"selection\" sm={12} md={12} lg={12}>\r\n                        <Card className={classes.card}>\r\n                            <CardHeader title=\"Usage over time\"/>\r\n                            <CardContent className={classes.cardContent}>\r\n\r\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                    <DeviceHistory devices={this.props.devices} cidr={this.props.cidr}  history={this.props.history} />\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>,\r\n        ];\r\n    }\r\n\r\n    getNumberOfScans(){\r\n        return this.props.history.length;\r\n    }\r\n}\r\n\r\nInternetUsage.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InternetUsage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PieChart from \"recharts/es6/chart/PieChart\";\r\nimport Pie from \"recharts/es6/polar/Pie\";\r\nimport Cell from \"recharts/es6/component/Cell\";\r\nimport ResponsiveContainer from \"recharts/es6/component/ResponsiveContainer\";\r\nimport * as d3 from \"d3\";\r\nimport queue from \"d3-queue/src/queue\"\r\nimport * as topojson from \"topojson-client\";\r\nimport {isIp4InCidrs} from \"./utils\";\r\n//import * as d3.geo from \"d3-geo\";\r\n//import * as d3shape from \"d3-shape\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n});\r\n\r\n\r\n\r\nclass EarthDeviceVisualization extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.total_packages = this.getTotalPackages();\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.initialize()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        this.refresh();\r\n    }\r\n\r\n    componentDidMount() {\r\n        d3.select(window)\r\n            .on(\"mousemove\", () => this.mousemove())\r\n            .on(\"mouseup\", () => this.mouseup());\r\n\r\n        this.width = 500;\r\n        this.height = 500;\r\n\r\n        this.proj = d3.geo.orthographic()\r\n            .translate([this.width / 2, this.height / 2])\r\n            .clipAngle(90)\r\n            .scale(220);\r\n\r\n        this.sky = d3.geo.orthographic()\r\n            .translate([this.width / 2, this.height / 2])\r\n            .clipAngle(90)\r\n            .scale(300);\r\n\r\n        this.path = d3.geo.path().projection(this.proj).pointRadius(2);\r\n\r\n        this.swoosh = d3.svg.line()\r\n            .x(function (d) {\r\n                return d[0]\r\n            })\r\n            .y(function (d) {\r\n                return d[1]\r\n            })\r\n            .interpolate(\"cardinal\")\r\n            .tension(.0);\r\n\r\n        this.links = [];\r\n        this.arcLines = [];\r\n\r\n        this.svg = d3.select(\"#d3earth\").append(\"svg\")\r\n            .attr(\"width\", this.width)\r\n            .attr(\"height\", this.height)\r\n            .on(\"mousedown\", () => this.mousedown());\r\n\r\n        queue()\r\n            .defer(d3.json, \"world-110m.json\")\r\n            .await((error, world) => this.ready(error, world, this));\r\n\r\n        this.ready = this.ready.bind(this);\r\n        this.mousedown = this.mousedown.bind(this);\r\n        this.mousemove = this.mousemove.bind(this);\r\n        this.mouseup = this.mouseup.bind(this);\r\n    }\r\n\r\n    ready(error, world, self) {\r\n        self.world = world;\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        if(!this.props.devices || !this.props.devices[0] || !this.props.devices[0].location){\r\n            return;\r\n        }\r\n\r\n\r\n        this.svg.selectAll(\"*\").remove();\r\n\r\n        var ocean_fill = this.svg.append(\"defs\").append(\"radialGradient\")\r\n            .attr(\"id\", \"ocean_fill\")\r\n            .attr(\"cx\", \"75%\")\r\n            .attr(\"cy\", \"25%\");\r\n        ocean_fill.append(\"stop\").attr(\"offset\", \"5%\").attr(\"stop-color\", \"#fff\");\r\n        ocean_fill.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", \"#fff\");\r\n\r\n        /*var globe_highlight = this.svg.append(\"defs\").append(\"radialGradient\")\r\n            .attr(\"id\", \"globe_highlight\")\r\n            .attr(\"cx\", \"75%\")\r\n            .attr(\"cy\", \"25%\");\r\n        globe_highlight.append(\"stop\")\r\n            .attr(\"offset\", \"5%\").attr(\"stop-color\", \"#ffd\")\r\n            .attr(\"stop-opacity\", \"0.6\");\r\n        globe_highlight.append(\"stop\")\r\n            .attr(\"offset\", \"100%\").attr(\"stop-color\", \"#ba9\")\r\n            .attr(\"stop-opacity\", \"0.2\");*/\r\n\r\n        var globe_shading = this.svg.append(\"defs\").append(\"radialGradient\")\r\n            .attr(\"id\", \"globe_shading\")\r\n            .attr(\"cx\", \"55%\")\r\n            .attr(\"cy\", \"45%\");\r\n        globe_shading.append(\"stop\")\r\n            .attr(\"offset\", \"30%\").attr(\"stop-color\", \"#fff\")\r\n            .attr(\"stop-opacity\", \"0\")\r\n        globe_shading.append(\"stop\")\r\n            .attr(\"offset\", \"100%\").attr(\"stop-color\", \"#505962\")\r\n            .attr(\"stop-opacity\", \"0.3\")\r\n\r\n        var drop_shadow = this.svg.append(\"defs\").append(\"radialGradient\")\r\n            .attr(\"id\", \"drop_shadow\")\r\n            .attr(\"cx\", \"50%\")\r\n            .attr(\"cy\", \"50%\");\r\n        drop_shadow.append(\"stop\")\r\n            .attr(\"offset\", \"20%\").attr(\"stop-color\", \"#000\")\r\n            .attr(\"stop-opacity\", \".5\")\r\n        drop_shadow.append(\"stop\")\r\n            .attr(\"offset\", \"100%\").attr(\"stop-color\", \"#000\")\r\n            .attr(\"stop-opacity\", \"0\")\r\n\r\n        this.svg.append(\"ellipse\")\r\n            .attr(\"cx\", this.width * 0.4).attr(\"cy\", 450)\r\n            .attr(\"rx\", this.proj.scale() * .90)\r\n            .attr(\"ry\", this.proj.scale() * .25)\r\n            .attr(\"class\", \"noclicks\")\r\n            .style(\"fill\", \"url(#drop_shadow)\");\r\n\r\n        this.svg.append(\"circle\")\r\n            .attr(\"cx\", this.width / 2).attr(\"cy\", this.height / 2)\r\n            .attr(\"r\", this.proj.scale())\r\n            .attr(\"class\", \"noclicks\")\r\n            .style(\"fill\", \"url(#ocean_fill)\");\r\n\r\n        let land = topojson.feature(this.world,this.world.objects.land);\r\n\r\n        this.svg.append(\"path\")\r\n            .datum(land)\r\n            .attr(\"class\", \"land noclicks\")\r\n            .attr(\"d\", this.path)\r\n            .style(\"fill\", \"#455a64\");\r\n\r\n        this.svg.append(\"circle\")\r\n            .attr(\"cx\", this.width / 2).attr(\"cy\", this.height / 2)\r\n            .attr(\"r\", this.proj.scale())\r\n            .attr(\"class\", \"noclicks\")\r\n            .style(\"fill\", \"url(#globe_highlight)\");\r\n\r\n        this.svg.append(\"circle\")\r\n            .attr(\"cx\", this.width / 2).attr(\"cy\", this.height / 2)\r\n            .attr(\"r\", this.proj.scale())\r\n            .attr(\"class\", \"noclicks\")\r\n            .style(\"fill\", \"url(#globe_shading)\");\r\n\r\n        this.svg.append(\"g\").attr(\"class\", \"points\")\r\n            .selectAll(\"text\").data(this.getPlaces())\r\n            .enter().append(\"path\")\r\n            .attr(\"class\", \"point\")\r\n            .attr(\"d\", this.path);\r\n\r\n        this.svg.append(\"g\").attr(\"class\", \"arcs\")\r\n            .selectAll(\"path\").data(this.getArcLines())\r\n            .enter().append(\"path\")\r\n            .attr(\"class\", \"arc\")\r\n            .attr(\"d\", this.path)\r\n            .style(\"stroke-width\", function (d) {\r\n                return Math.min(50, Math.max(d.properties.count / this.total_packages * 20, 1));\r\n            })\r\n\r\n        this.svg.append(\"g\").attr(\"class\", \"flyers\")\r\n            .selectAll(\"path\").data(this.getLinks())\r\n            .enter().append(\"path\")\r\n            .attr(\"class\", \"flyer\")\r\n            .attr('stroke', (d) => {\r\n                return d.threats.length > 0 ? \"red\" : \"#0094FF\";\r\n            })\r\n            .style(\"stroke-width\", (d) => {\r\n                return Math.min(50, Math.max(d.count / this.total_packages * 20, 1));\r\n            })\r\n            .attr(\"d\", (d) => {\r\n                return this.swoosh(this.flying_arc(d))\r\n            });\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    getTotalPackages() {\r\n        let cnt = 0;\r\n        for(let device of this.props.devices) {\r\n            if(!device.connections){\r\n                continue;\r\n            }\r\n            cnt += Object.keys(device.connections).map((key, index) => {\r\n                return device.connections[key].snd + device.connections[key].rcv;\r\n            }).reduce((a, b) => a + b, 0);\r\n        }\r\n        return cnt;\r\n    }\r\n\r\n    getPlaces() {\r\n\r\n        let local_loc = this.props.devices[0].location;\r\n        if(!local_loc){\r\n            local_loc = {'lat':0,'lon':0};\r\n        }\r\n        let test = [{\r\n            type: \"Feature\",\r\n            geometry: {type: \"Point\", coordinates: [local_loc.lat, local_loc.lon]}\r\n        }];\r\n        let all_remote = [];\r\n        for(let device of this.props.devices) {\r\n            if(!device.connections){\r\n                continue;\r\n            }\r\n            let remote = Object.keys(device.connections).map((key, index) => {\r\n                if (!isIp4InCidrs(key, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])) {\r\n                    let loc = device.connections[key].location;\r\n                    if(!loc){\r\n                        loc = {lat:0, lon:0}\r\n                    }\r\n                    return {type: \"Feature\", geometry: {type: \"Point\", coordinates: [loc.lat, loc.lon]}}\r\n                }\r\n                return null\r\n            }).filter(function (el) {\r\n                return el;\r\n            });\r\n            all_remote = [...all_remote, ...remote];\r\n        }\r\n\r\n        return [...test, ...all_remote];\r\n    }\r\n\r\n    getArcLines() {\r\n        let src = this.props.devices[0].location;\r\n        let all_lines = [];\r\n        for(let device of this.props.devices) {\r\n            if(!device.connections){\r\n                continue;\r\n            }\r\n            let lines = Object.keys(device.connections).map((key, index) => {\r\n                let loc = device.connections[key].location;\r\n                if(!loc){\r\n                    loc = {lat:0, lon:0}\r\n                }\r\n                if (!isIp4InCidrs(key, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])) {\r\n                    return {\r\n                        \"type\": \"Feature\",\r\n                        \"properties\": {\r\n                            \"count\": device.connections[key].snd + device.connections[key].rcv,\r\n                            \"threats\": device.connections[key].threats,\r\n                            \"mac\":device.mac\r\n                        },\r\n                        \"geometry\": {\"type\": \"LineString\", \"coordinates\": [[src.lat, src.lon], [loc.lat, loc.lon]]}\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(function (el) {\r\n                return el;\r\n            });\r\n            all_lines = [...all_lines, ...lines]\r\n        }\r\n\r\n        return all_lines;\r\n    }\r\n\r\n    getLinks() {\r\n        let src = this.props.devices[0].location;\r\n        let all_links = [];\r\n        for(let device of this.props.devices) {\r\n            if(!device.connections){\r\n                continue;\r\n            }\r\n            let links = Object.keys(device.connections).map((key, index) => {\r\n                let loc = device.connections[key].location;\r\n                if(!loc){\r\n                    loc = {lat:0, lon:0}\r\n                }\r\n                if (!isIp4InCidrs(key, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])) {\r\n                    return {\r\n                        source: [src.lat, src.lon],\r\n                        target: [loc.lat, loc.lon],\r\n                        count: device.connections[key].snd + device.connections[key].rcv,\r\n                        threats: device.connections[key].threats,\r\n                        mac: device.mac\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(function (el) {\r\n                return el;\r\n            });\r\n            all_links = [...all_links, ...links]\r\n        }\r\n\r\n        return all_links;\r\n    }\r\n\r\n\r\n    mousedown() {\r\n        this.m0 = [d3.event.pageX, d3.event.pageY];\r\n        this.o0 = this.proj.rotate();\r\n        d3.event.preventDefault();\r\n    }\r\n\r\n    mousemove() {\r\n        if (this.m0) {\r\n            var m1 = [d3.event.pageX, d3.event.pageY]\r\n                , o1 = [this.o0[0] + (m1[0] - this.m0[0]) / 6, this.o0[1] + (this.m0[1] - m1[1]) / 6];\r\n            o1[1] = o1[1] > 30 ? 30 :\r\n                o1[1] < -30 ? -30 :\r\n                    o1[1];\r\n            this.proj.rotate(o1);\r\n            this.sky.rotate(o1);\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    mouseup() {\r\n        if (this.m0) {\r\n            this.mousemove();\r\n            this.m0 = null;\r\n        }\r\n    }\r\n\r\n    fade_at_edge(d) {\r\n        var centerPos = this.proj.invert([this.width / 2, this.height / 2]),\r\n            arc = d3.geo.greatArc(),\r\n            start, end;\r\n        // function is called on 2 different data structures..\r\n        if (d.source) {\r\n            start = d.source;\r\n            end = d.target;\r\n        }\r\n        else {\r\n            start = d.geometry.coordinates[0];\r\n            end = d.geometry.coordinates[1];\r\n        }\r\n\r\n        var start_dist = 1.57 - arc.distance({source: start, target: centerPos}),\r\n            end_dist = 1.57 - arc.distance({source: end, target: centerPos});\r\n\r\n        var fade = d3.scale.linear().domain([-.1, 0]).range([0, .1])\r\n        var dist = start_dist < end_dist ? start_dist : end_dist;\r\n        return fade(dist);\r\n    }\r\n\r\n    flying_arc(pts) {\r\n        var source = pts.source,\r\n            target = pts.target;\r\n\r\n        var mid = this.location_along_arc(source, target, .5);\r\n        var result = [this.proj(source),\r\n            this.sky(mid),\r\n            this.proj(target)]\r\n        return result;\r\n    }\r\n\r\n    location_along_arc(start, end, loc) {\r\n        var interpolator = d3.geo.interpolate(start, end);\r\n        return interpolator(loc)\r\n    }\r\n\r\n    refresh() {\r\n        const self = this;\r\n        this.svg.selectAll(\".land\").attr(\"d\", this.path);\r\n        this.svg.selectAll(\".point\").attr(\"d\", this.path);\r\n        this.svg.selectAll(\".arc\").attr(\"d\", this.path)\r\n            .attr(\"opacity\", (d) => {\r\n                if(self.props.devices.find(de=>de.mac === d.properties.mac)) {\r\n                    return this.fade_at_edge(d)\r\n                }\r\n                return 0\r\n            })\r\n\r\n\r\n\r\n        this.svg.selectAll(\".flyer\")\r\n            .attr(\"d\", (d) => {\r\n                return this.swoosh(this.flying_arc(d))\r\n            })\r\n            .attr(\"opacity\", (d) => {\r\n                if(self.props.devices.find(de=>de.mac === d.mac)) {\r\n                    return this.fade_at_edge(d)\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div id=\"d3earth\" wdiht=\"500\" height=\"500\"></div>;\r\n    }\r\n}\r\n\r\nEarthDeviceVisualization.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EarthDeviceVisualization);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EarthDeviceVisualization from \"./EarthNetworkVisualization\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {getDeviceName} from \"./utils\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport classNames from 'classnames';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    cardGrid: {\r\n        padding: `0px 0`,\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nclass GlobalLocations extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {selectedDevices: this.props.devices.map(d => d.mac)}\r\n\r\n        this.toggleDevice = this.toggleDevice.bind(this);\r\n    }\r\n\r\n    toggleDevice(device) {\r\n        let wasActive = [...this.state.selectedDevices].find(d => d === device.mac);\r\n        if (wasActive) {\r\n            this.setState({selectedDevices: [...this.state.selectedDevices].filter(m => m !== device.mac)})\r\n        } else {\r\n            this.setState({selectedDevices: [...this.state.selectedDevices, device.mac]})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        let deviceCheckboxes = this.props.devices.map(d => <FormControlLabel\r\n            control={\r\n                <Checkbox checked={this.state.selectedDevices.find(m => m === d.mac)}\r\n                          onChange={() => this.toggleDevice(d)} value={d.name}/>\r\n            }\r\n            label={getDeviceName(d)}\r\n        />);\r\n\r\n        return [\r\n            <div key={\"spacer\"} className={classes.appBarSpacer}/>,\r\n            <Typography key={\"typo1\"} variant=\"h4\" gutterBottom component=\"h2\">\r\n                Global Locations\r\n            </Typography>,\r\n            <div className={classNames(classes.layout, classes.cardGrid)}>\r\n                {/* End hero unit */}\r\n                <Grid container spacing={40}>\r\n                    <Grid item key=\"earth\" sm={12} md={8} lg={8}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent className={classes.cardContent} style={{textAlign: 'center'}}>\r\n                                <EarthDeviceVisualization\r\n                                    devices={this.props.devices.filter(d => this.state.selectedDevices.find(m => m === d.mac))}\r\n                                    cidr={this.props.cidr}/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item key=\"selection\" sm={12} md={4} lg={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent className={classes.cardContent}>\r\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                                    <FormLabel component=\"legend\">Display traffic of following devices</FormLabel>\r\n                                    <FormGroup>\r\n                                        {deviceCheckboxes}\r\n                                    </FormGroup>\r\n                                </FormControl>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>,\r\n\r\n        ];\r\n    }\r\n}\r\n\r\nGlobalLocations.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GlobalLocations);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n});\r\n\r\nclass Devices extends React.Component {\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n\r\n\r\n        return [\r\n            <div key={\"spacer\"} className={classes.appBarSpacer}/>,\r\n            <Typography key={\"typo1\"} variant=\"h4\" gutterBottom component=\"h2\">\r\n            Devices\r\n            </Typography>\r\n        ];\r\n    }\r\n}\r\n\r\nDevices.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Devices);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {isIp4InCidrs, openExternally} from \"../utils\";\r\nimport { palette } from '@material-ui/system';\r\n\r\nclass BotNetStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let report = [];\r\n\r\n        let cc_threats = 0;\r\n        let bn_threats = 0;\r\n\r\n\r\n        for (var con in this.props.device.connections) {\r\n            if(isIp4InCidrs(con, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])){\r\n                continue;\r\n            }\r\n            let tt = this.props.device.connections[con].threats.find(t => t.lists.find(e => e.indexOf(\"command_control\") >= 0));\r\n            let bt = this.props.device.connections[con].threats.find(t => t.lists.find(e => e.indexOf(\"botnet\") >= 0));\r\n\r\n            if (tt) {\r\n                tt = JSON.parse(JSON.stringify(tt));\r\n                tt.lists = [...tt.lists].filter(e => e.indexOf(\"command_control\") >= 0);\r\n            }\r\n\r\n            if (bt) {\r\n                bt = JSON.parse(JSON.stringify(bt));\r\n                bt.lists = [...bt.lists].filter(e => e.indexOf(\"botnet\") >= 0);\r\n            }\r\n\r\n            if (tt && tt.lists.length > 0) {\r\n                cc_threats += tt.lists.length;\r\n\r\n\r\n                let ip_lists = tt.lists.map(entry => {\r\n                    let url = \"http://iplists.firehol.org/?ipset=\" + entry.substring(entry.lastIndexOf('/') + 1).split(\".\")[0];\r\n                    return <div><a href=\"#\" onClick={() => openExternally(url)}>{entry}</a></div>\r\n                });\r\n                report.push(<div className=\"reportEntry\">Communication with {con}. This IP is listed\r\n                    on {tt.lists.length} malicious IP lists as controlling a bot net: {ip_lists}<br/>This can be\r\n                    evidence that the device is part of a bot net.</div>);\r\n            }\r\n            if (bt && bt.lists.length > 0) {\r\n                bn_threats += bt.lists.length;\r\n                let ip_lists = bt.lists.map(entry => {\r\n                    let url = \"http://iplists.firehol.org/?ipset=\" + entry.substring(entry.lastIndexOf('/') + 1).split(\".\")[0];\r\n                    return <div><a\r\n                        href=\"#\" onClick={() => openExternally(url)}>{entry}</a></div>\r\n                });\r\n                report.push(<div className=\"reportEntry\">Communication with {con}. This IP is listed\r\n                    on {bt.lists.length} IP lists as being part of a bot net: {ip_lists}<br/> This implies that this\r\n                    device communicates with a possibly infected device, but does not imply an infection of the device\r\n                    itself.</div>);\r\n            }\r\n        }\r\n\r\n        let title=null;\r\n        if (cc_threats > 2) {\r\n            title = <Typography style={{\"color\":\"#f44336\"}}>Probably part of a known bot net</Typography>;\r\n        } else if (cc_threats > 0 || bn_threats > 2) {\r\n            title = <Typography style={{\"color\":\"#FF8800\"}}>With small probability part of a known bot net</Typography>;\r\n        } else {\r\n            title = <Typography style={{\"color\":\"#339900\"}}>Not part of a known bot net</Typography>;\r\n        }\r\n        return <ExpansionPanel>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                {title}\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n                <Typography>\r\n                    {report}\r\n                </Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>;;\r\n    }\r\n}\r\n\r\nclass SuspiciousTrafficStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getAllThreatsConcerning(topic, con) {\r\n        let cm = this.props.device.connections[con].threats.find(t => t.lists.find(e => e.indexOf(topic) >= 0));\r\n\r\n        if (cm) {\r\n            cm = JSON.parse(JSON.stringify(cm));\r\n            cm.lists = [...cm.lists].filter(e => e.indexOf(topic) >= 0);\r\n        }\r\n        return cm;\r\n    }\r\n\r\n    addThreatReport(topic, addition, report) {\r\n        let cm_threats = 0;\r\n        for (var con in this.props.device.connections) {\r\n            if(isIp4InCidrs(con, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])){\r\n                continue;\r\n            }\r\n            let cm = this.getAllThreatsConcerning(topic, con)\r\n            if (cm && cm.lists.length > 0) {\r\n                cm_threats += cm.lists.length;\r\n\r\n                let ip_lists = cm.lists.map(entry => {\r\n                    let url = \"http://iplists.firehol.org/?ipset=\" + entry.substring(entry.lastIndexOf('/') + 1).split(\".\")[0];\r\n                    return <div><a href=\"#\" onClick={() => openExternally(url)}>{entry}</a></div>\r\n                });\r\n                report.push(<div className=\"reportEntry\">Communication with {con}. This IP is listed\r\n                    on {cm.lists.length} malicious IP lists as {addition}: {ip_lists}</div>);\r\n            }\r\n        }\r\n        return cm_threats;\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        let report = [];\r\n\r\n        let cm_threats = this.addThreatReport(\"cryptominer\", \"being part of a blockchain network\", report);\r\n        let invalid_ips = this.addThreatReport(\"invalid_ips\", \"being an IP address that currently is not registered to anyone (suspicious)\", report);\r\n        let malware = this.addThreatReport(\"malware\", \"being distributing malware or being infected with malware\", report);\r\n        let ransomware = this.addThreatReport(\"ransomware\", \"being connected to ransomware control or distribution\", report);\r\n        let spam = this.addThreatReport(\"spam\", \"being part of a spam network\", report);\r\n        let tor = this.addThreatReport(\"tor\", \"being part of the tor network (can be suspicious)\", report);\r\n        let tracking = this.addThreatReport(\"tracking\", \"tracking user behaviour for usage analytics or targeted advertisement\", report);\r\n\r\n        let title = null;\r\n        if (cm_threats * 4 + invalid_ips * 4 + malware * 2 + ransomware * 2 + spam * 1 > 9) {\r\n            title = <Typography style={{\"color\":\"#f44336\"}}>Suspicious traffic</Typography>;\r\n        } else if (cm_threats * 3 + invalid_ips * 3 + malware * 1 + ransomware * 1 > 4) {\r\n            title = <Typography style={{\"color\":\"#FF8800\"}}>Suspicious traffic</Typography>;\r\n        } else {\r\n            title = <Typography style={{\"color\":\"#339900\"}}>No significant suspicious traffic</Typography>;\r\n        }\r\n        return <ExpansionPanel>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                {title}\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n                <Typography>\r\n                    {report}\r\n                </Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>;\r\n    }\r\n}\r\n\r\nSuspiciousTrafficStatus.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nclass SuspiciousActivityStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getAllThreatsConcerning(topic, con) {\r\n        let cm = this.props.device.connections[con].threats.find(t => t.lists.find(e => e.indexOf(topic) >= 0));\r\n\r\n        if (cm) {\r\n            cm = JSON.parse(JSON.stringify(cm));\r\n            cm.lists = [...cm.lists].filter(e => e.indexOf(topic) >= 0);\r\n        }\r\n        return cm;\r\n    }\r\n\r\n    addThreatReport(topic, addition, report) {\r\n        let cm_threats = 0;\r\n        for (var con in this.props.device.connections) {\r\n            if(isIp4InCidrs(con, [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])){\r\n                continue;\r\n            }\r\n            let cm = this.getAllThreatsConcerning(topic, con)\r\n            if (cm && cm.lists.length > 0) {\r\n                cm_threats += cm.lists.length;\r\n\r\n                let ip_lists = cm.lists.map(entry => {\r\n                    let url = \"http://iplists.firehol.org/?ipset=\" + entry.substring(entry.lastIndexOf('/') + 1).split(\".\")[0];\r\n                    return <div><a href=\"#\" onClick={() => openExternally(url)}>{entry}</a></div>\r\n                });\r\n                report.push(<div className=\"reportEntry\">Communication with {con}. This IP is listed\r\n                    on {cm.lists.length} malicious IP lists as {addition}: {ip_lists}</div>);\r\n            }\r\n        }\r\n        return cm_threats;\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        let report = [];\r\n\r\n        let title = null;\r\n        if (false) {\r\n            title = <Typography style={{\"color\":\"#f44336\"}}>Suspicious traffic</Typography>;\r\n        } else if (false) {\r\n            title = <Typography style={{\"color\":\"#FF8800\"}}>Suspicious traffic</Typography>;\r\n        } else {\r\n            title = <Typography style={{\"color\":\"#339900\"}}>No suspicious activities</Typography>;\r\n        }\r\n        return <ExpansionPanel>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                {title}\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n                <Typography>\r\n                    {report}\r\n                </Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>;\r\n    }\r\n}\r\n\r\nSuspiciousActivityStatus.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nclass DeviceOverview extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return [\r\n            <div className={classes.root}>\r\n                <BotNetStatus device={this.props.device} cidr={this.props.cidr}/>\r\n                <SuspiciousTrafficStatus device={this.props.device} cidr={this.props.cidr}/>\r\n                <SuspiciousActivityStatus device={this.props.device} cidr={this.props.cidr}/>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nDeviceOverview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DeviceOverview);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Pie, PieChart, ResponsiveContainer, Cell, Legend} from \"recharts\";\r\nimport {isIp4InCidrs} from \"../utils\";\r\n\r\nconst styles = {};\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x  = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy  + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    debugger;\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} \tdominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nclass InternalExternal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let internal = 0;\r\n        let external = 0;\r\n\r\n        let sortable = [];\r\n        for (var con in this.props.device.connections) {\r\n            sortable.push([con, this.props.device.connections[con]]);\r\n        }\r\n\r\n        let rows = [];\r\n        for (let entry of sortable) {\r\n            if (this.props.cidr && isIp4InCidrs(entry[0], [this.props.cidr, '255.255.255.255/32', '224.0.0.0/24'])) {\r\n                internal += entry[1].bsnd + entry[1].brcv;\r\n            } else {\r\n                external += entry[1].bsnd + entry[1].brcv;\r\n            }\r\n        }\r\n\r\n        const data = [{name: 'Local network communication', value: internal}, {name: 'Internet communication', value: external}];\r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n        return <ResponsiveContainer width=\"100%\" height={250}>\r\n            <PieChart  width=\"100%\" height=\"100%\" onMouseEnter={this.onPieEnter}>\r\n            <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                innerRadius=\"70%\" outerRadius=\"100%\"\r\n                fill=\"#8884d8\"\r\n                dataKey = \"value\"\r\n            >\r\n                {\r\n                    data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)\r\n                }\r\n            </Pie>\r\n            <Legend width=\"30%\" layout='vertical' verticalAlign=\"middle\" align=\"right\"/>\r\n        </PieChart>\r\n        </ResponsiveContainer>;\r\n    }\r\n\r\n}\r\n\r\nInternalExternal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default (InternalExternal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Pie, PieChart, ResponsiveContainer, Cell, Legend} from \"recharts\";\r\n\r\nconst styles = {};\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x  = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy  + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    debugger;\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} \tdominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nclass IngoingOutgoing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let sending = 0;\r\n        let receiving = 0;\r\n\r\n        let sortable = [];\r\n        for (var con in this.props.device.connections) {\r\n            sortable.push([con, this.props.device.connections[con]]);\r\n        }\r\n\r\n        let rows = [];\r\n        for (let entry of sortable) {\r\n            sending += entry[1].bsnd;\r\n            receiving += entry[1].brcv;\r\n        }\r\n\r\n        const data = [{name: 'bytes received', value: receiving}, {name: 'bytes send', value: sending}];\r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n        return <ResponsiveContainer width=\"100%\" height={250}>\r\n            <PieChart  width=\"100%\" height=\"100%\" onMouseEnter={this.onPieEnter}>\r\n            <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                innerRadius=\"70%\" outerRadius=\"100%\"\r\n                fill=\"#8884d8\"\r\n                dataKey = \"value\"\r\n            >\r\n                {\r\n                    data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)\r\n                }\r\n            </Pie>\r\n            <Legend layout='vertical' verticalAlign=\"middle\" align=\"right\"/>\r\n        </PieChart>\r\n        </ResponsiveContainer>;\r\n    }\r\n\r\n}\r\n\r\nIngoingOutgoing.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default (IngoingOutgoing);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {isIp4InCidrs, openExternally} from \"../utils\";\r\nimport classNames from 'classnames';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport InternalExternal from \"./InternalExternal\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ResponsiveContainer from \"recharts/es6/component/ResponsiveContainer\";\r\nimport IngoingOutgoing from \"./IngoingOutgoing\";\r\nimport DeviceHistory from \"./DeviceHistory\";\r\nimport DeviceInfo from \"../Dashboard\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar, heroContent: {\r\n        maxWidth: 600,\r\n        margin: '0 auto',\r\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    cardGrid: {\r\n        padding: `${theme.spacing.unit * 2}px 0`,\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nclass DeviceActivity extends React.Component {\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return [\r\n            <div className={classNames(classes.layout, classes.cardGrid)}>\r\n                {/* End hero unit */}\r\n                <Grid container spacing={40}>\r\n                    <Grid item key=\"internalExternal\" sm={12} md={6} lg={6}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Internal/External communication\r\n                                </Typography>\r\n                                <InternalExternal device={this.props.device} cidr={this.props.cidr}/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item key=\"ingoingOutgoing\" sm={12} md={6} lg={6}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Ingoing/Outgoing communication\r\n                                </Typography>\r\n                                <IngoingOutgoing device={this.props.device} cidr={this.props.cidr}/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item key=\"history\" sm={12} md={6} lg={6}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Communication history\r\n                                </Typography>\r\n                                <ResponsiveContainer width=\"100%\" height={250}>\r\n                                    <DeviceHistory devices={[this.props.device]} cidr={this.props.cidr}  history={this.props.history} />\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        ];\r\n    }\r\n}\r\n\r\nDeviceActivity.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DeviceActivity);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {isIp4InCidrs, openExternally} from \"../utils\";\r\nimport { palette } from '@material-ui/system';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport EarthDeviceVisualization from \"../EarthNetworkVisualization\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nclass DeviceCommunicationPartners extends React.Component {\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        let sortable = [];\r\n        for (var con in this.props.device.connections) {\r\n            sortable.push([con, this.props.device.connections[con]]);\r\n        }\r\n        sortable.sort(function (a, b) {\r\n            return b[1].snd + b[1].rcv - (a[1].snd + a[1].rcv);\r\n        });\r\n\r\n        return [\r\n            <Paper style={{textAlign: \"center\"}} className={classes.root} key={this.props.device.mac}>\r\n                <EarthDeviceVisualization devices={[this.props.device]} cidr={this.props.cidr}/>\r\n            </Paper>,\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>IP</TableCell>\r\n                            <TableCell align=\"right\">Domains</TableCell>\r\n                            <TableCell align=\"right\">Location</TableCell>\r\n                            <TableCell align=\"right\"># packages</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {sortable.map(row => {\r\n                            let domainStuff = row[1].domains.map((domain) => <div>{domain}</div>);\r\n\r\n                            return (\r\n                                <TableRow key={row[0]}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row[0]}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{domainStuff}</TableCell>\r\n                                    <TableCell align=\"right\">{getLocationString(row[1])}</TableCell>\r\n                                    <TableCell align=\"right\">{row[1].snd + row[1].rcv} (&darr; {row[1].rcv} &uarr; {row[1].snd})</TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        ];\r\n    }\r\n}\r\n\r\nfunction getLocationString(con){\r\n    if(con.location){\r\n        return con.location.city + \" (\" + con.location.cc + \")\";\r\n    }else{\r\n        return \"unknown\";\r\n    }\r\n}\r\n\r\nDeviceCommunicationPartners.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DeviceCommunicationPartners);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nclass DeviceInfo extends React.Component {\r\n\r\n    getVendor(){\r\n        if(this.props.device.vendor&&this.props.device.vendor[this.props.device.mac]){\r\n            return this.props.device.vendor[this.props.device.mac]\r\n        }\r\n        return \"unknown\"\r\n    }\r\n\r\n    getOSMatch(){\r\n        if(this.props.device.osmatch&&this.props.device.osmatch.length>0){\r\n            return this.props.device.osmatch.map(os=><div>{os.name}</div>)\r\n        }\r\n        return \"unknown\"\r\n    }\r\n\r\n    getPorts(){\r\n        if(!this.props.device.tcp){\r\n            return \"none\";\r\n        }\r\n\r\n        if(Object.keys(this.props.device.tcp).length>0 && Object.keys(this.props.device.tcp).filter(port=>this.props.device.tcp[port].state === \"open\").length > 0){\r\n            let temp = Object.keys(this.props.device.tcp).filter(port=>this.props.device.tcp[port].state === \"open\").map(port=><div><pre>{port}:   {this.props.device.tcp[port].name} ({this.props.device.tcp[port].product})</pre></div>);\r\n            return temp;\r\n        }\r\n        return \"none\"\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        /*\r\n        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>IP</TableCell>\r\n                            <TableCell align=\"right\">Domains</TableCell>\r\n                            <TableCell align=\"right\">Location</TableCell>\r\n                            <TableCell align=\"right\"># packages</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n         */\r\n\r\n        let ports = this.getPorts();\r\n\r\n        return <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableBody>\r\n                        <TableRow key=\"dname\">\r\n                            <TableCell component=\"th\" scope=\"row\" style={{width:\"200px\"}}>\r\n                                Name:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {this.props.device.name}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow key=\"dip\">\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Ip:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {this.props.device.ip}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow key=\"dmac\">\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                MAC:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {this.props.device.mac}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow key=\"dvendor\">\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Vendor:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {this.getVendor()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow key=\"dos\">\r\n                            <TableCell component=\"th\" scope=\"row\"  style={{verticalAlign:\"top\", paddingTop:\"18px\"}}>\r\n                                Possible OS:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {this.getOSMatch()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow key=\"dports\">\r\n                            <TableCell component=\"th\" scope=\"row\" style={{verticalAlign:\"top\", paddingTop:\"18px\"}}>\r\n                                Known ports:\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {ports}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>;\r\n    }\r\n}\r\n\r\nDeviceInfo.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DeviceInfo);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport DeviceOverview from \"./DeviceOverview\";\r\nimport DeviceActivity from \"./DeviceActivity\";\r\nimport DeviceCommunicationPartners from \"./DeviceCommunicationPartners\";\r\nimport DeviceInfo from \"./DeviceInfo\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n});\r\n\r\nclass DeviceView extends React.Component {\r\n\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({value});\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        let content = [];\r\n\r\n        if (this.state.value === 0) {\r\n            content = <DeviceOverview device={this.props.device} cidr={this.props.cidr}/>\r\n        } else if (this.state.value === 1) {\r\n            content = <DeviceActivity device={this.props.device} cidr={this.props.cidr} history={this.props.history}/>\r\n        } else if (this.state.value === 2) {\r\n            content = <DeviceCommunicationPartners device={this.props.device} cidr={this.props.cidr}/>\r\n        } else if (this.state.value === 3) {\r\n            content = <DeviceInfo device={this.props.device} cidr={this.props.cidr}/>\r\n        }\r\n\r\n        return [\r\n            <div key={\"spacer\"} className={classes.appBarSpacer}/>,\r\n            <Typography key={\"typo1\"} variant=\"h4\" gutterBottom component=\"h2\">\r\n                {this.props.device.name}\r\n            </Typography>,\r\n            <Paper square>\r\n                <AppBar position=\"static\" color=\"default\"><Tabs\r\n                    value={this.state.value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={this.handleChange}\r\n                >\r\n                    <Tab label=\"Overview\"/>\r\n                    <Tab label=\"Activity\"/>\r\n                    <Tab label=\"Communication Partners\"/>\r\n                    <Tab label=\"Info\"/>\r\n                </Tabs>\r\n                </AppBar>\r\n            </Paper>,\r\n            content\r\n        ];\r\n    }\r\n}\r\n\r\nDeviceView.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DeviceView);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Navigation from \"./Navigation\";\nimport Overview from \"./Overview\";\nimport InternetUsage from \"./InternetUsage\";\nimport GlobalLocations from \"./GlobalLocations\";\nimport Devices from \"./Devices\";\nimport DeviceInfo from \"./device/DeviceView\";\nimport DeviceHistory from \"./device/DeviceHistory\";\nimport memoize from \"memoize-one\";\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    },\n    timeSelect: {\n        flexGrow: 1\n    },\n    toggleGroup: {\n        display: \"inline-block\"\n    }\n});\n\nclass Dashboard extends React.Component {\n    state = {\n        open: true,\n        navigation: \"Overview\",\n        timeSelect: 300,\n        historySelection: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.navigate = this.navigate.bind(this);\n        this.handleTimeSelect = this.handleTimeSelect.bind(this);\n    }\n\n    navigate(target) {\n        this.setState({navigation: target})\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleDrawerClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        const fhist = this.filteredHistory(this.props.history, this.state.timeSelect);\n        const mScan = this.mergedScan(fhist);\n\n        let mainContent = null;\n\n        if (this.state.navigation === \"Overview\") {\n            mainContent = <Overview/>;\n        } else if (this.state.navigation === \"Internet_Usage\") {\n            mainContent = <InternetUsage devices={mScan.devices} history={fhist} timeSelect={this.state.timeSelect}/>;\n        } else if (this.state.navigation === \"Locations\") {\n            mainContent = <GlobalLocations devices={mScan.devices} cidr={this.props.cidr}/>;\n        } else if (this.state.navigation === \"Devices\") {\n            mainContent = <Devices/>;\n        } else {\n            let dev = mScan.devices.find(d => d.ip == this.state.navigation);\n\n            //dev = this.props.devices.find(d => d.ip == this.state.navigation)\n\n            mainContent =\n                <DeviceInfo device={dev} cidr={this.props.cidr} history={fhist}/>;\n        }\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar\n                    position=\"absolute\"\n                    className={classNames(classes.appBar, false && this.state.open && classes.appBarShift)}\n                >\n                    <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(\n                                classes.menuButton,\n                                this.state.open && classes.menuButtonHidden,\n                            )}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            HomeLab\n                        </Typography>\n                        <div className={classes.timeSelect}>\n                            <ToggleButtonGroup className={classes.toggleGroup} value={this.state.timeSelect} exclusive\n                                               onChange={this.handleTimeSelect}>\n                                <ToggleButton value={30 * 86400}>\n                                    30d\n                                </ToggleButton>\n                                <ToggleButton value={86400}>\n                                    24h\n                                </ToggleButton>\n                                <ToggleButton value={60 * 60}>\n                                    1h\n                                </ToggleButton>\n                                <ToggleButton value={5 * 60}>\n                                    5min\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </div>\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n                    }}\n                    open={this.state.open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <Navigation navigate={this.navigate} devices={this.props.devices}/>\n                </Drawer>\n                <main className={classes.content}>\n                    {mainContent}\n                </main>\n            </div>\n        );\n    }\n\n    handleTimeSelect(event, value) {\n        this.setState({timeSelect: value});\n    }\n\n    filteredHistory = memoize(\n        (history, timeSelection) => {\n            if (!history) {\n                return [];\n            }\n            let maxTime = history.reduce((acc, scan) => Math.max(acc, scan.time), 0);\n            return history.filter(scan => scan.time > maxTime - timeSelection);\n        }\n    );\n\n    mergedScan = memoize(\n        (fhist) => {\n            if (!fhist || fhist.length == 0) {\n                return {};\n            }\n            let index = fhist.length - 1;\n            let base = JSON.parse(JSON.stringify(fhist.pop()));\n\n            index--;\n            while (index >= 0) {\n                let scan = fhist[index];\n                for (let sdev of scan.devices) {\n                    let bdev = base.devices.find(d => d.mac === sdev.mac);\n                    if (!bdev) {\n                        // device was not known yet -> add it now\n                        base.devices.push(sdev);\n                    } else {\n                        // merge connections of a known device\n                        for (let scon_index in sdev.connections) {\n\n                            let scon = sdev.connections[scon_index];\n                            let bcon = bdev.connections[scon_index];\n                            if (!bcon) {\n                                // connection was unknown -> add it now\n                                bdev.connections[scon_index] = scon;\n                            } else {\n\n                                // merge connection info\n                                bcon.brcv += scon.brcv;\n                                bcon.bsnd += scon.bsnd;\n                                bcon.rcv += scon.rcv;\n                                bcon.snd += scon.snd;\n\n                                // TODO fix locations\n                                if(scon.location){\n                                    debugger;\n                                    bcon.location = scon.location;\n                                }else{\n                                    bcon.location = {\"lon\": Math.random()*45, \"lat\":Math.random()*100};\n                                }\n\n                                // TODO merge domains and threats\n                            }\n                        }\n                    }\n                }\n                index--;\n            }\n            return base;\n        }\n    );\n\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","import React, {Component} from 'react';\nimport './App.css';\nimport Dashboard from \"./Dashboard\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#455a64',\n        },\n        secondary: {\n            main: '#0277bd',\n        },\n    },\n});\n\nclass App extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.initWS();\n\n        this.state = {devices: [], route: null, device: null, scan_text: \"\", scan_progress: 0, \"disclaimer\":0, once_open: false, cidr: \"\"};\n    }\n\n    initWS() {\n        let self = this;\n\n        this.ws = new WebSocket(\"ws://\"+window.location.hostname+\":7463\");\n\n        this.ws.onopen = () => {\n            console.log(\"connection open\");\n            self.setState({once_open : true});\n        }\n\n        this.ws.onmessage = (event) => {\n            console.log(event.data);\n            let msg = JSON.parse(event.data);\n            if (msg.type && msg.type === \"device_list\") {\n                self.setState({\"devices\": msg.payload});\n                if (self.state.route === \"scan\") {\n                    self.setState({\"route\": null, scan_text: \"\"});\n                }\n            }\n            if (msg.type && msg.type === \"scan_result\") {\n                self.setState({\"cidr\": msg.payload.cidr});\n                self.setState({\"devices\": msg.payload.devices});\n                if (self.state.route === \"scan\") {\n                    self.setState({\"route\": null, scan_text: \"\"});\n                }\n            }\n            if (msg.type && msg.type === \"history\") {\n                self.setState({\"history\": msg.payload});\n            }\n            if (msg.type && msg.type === \"scan_update\") {\n                self.setState({\"scan_text\": msg.payload.text});\n                self.setState({\"scan_progress\": msg.payload.progress});\n            }\n        };\n\n        this.ws.onerror = (ev) => {\n            if(self.state.once_open){\n                alert(JSON.stringify(ev));\n                self.setState({once_open:false});\n            }\n            console.log(ev);\n            this.initWS();\n        }\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Dashboard devices={this.state.devices} cidr={this.state.cidr} history={this.state.history}/>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}